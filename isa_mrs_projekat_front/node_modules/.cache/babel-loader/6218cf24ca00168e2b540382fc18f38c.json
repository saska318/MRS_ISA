{"ast":null,"code":"import { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useStore } from \"vuex\";\nimport axios from \"axios\";\nimport { toggleLoading, toggleProcessing } from \"@/components/state\";\nlibrary.add(faPlus, faTrash);\nexport default {\n  name: \"LoyaltyProgramView\",\n  components: {\n    FontAwesomeIcon\n  },\n\n  data() {\n    return {\n      primaryValue1: null,\n      primaryValue2: null,\n      categories: [],\n      clientPoints: null,\n      ownerPoints: null,\n      imageUrls: []\n    };\n  },\n\n  mounted() {\n    toggleLoading();\n    const store = useStore();\n    axios.get(\"/LoyaltyProgram/getProgram\", {\n      headers: {\n        Authorization: \"Bearer \" + store.getters.access_token\n      }\n    }).then(response => {\n      this.categories = response.data.loyaltyCategories;\n      this.clientPoints = response.data.clientPointsPerReservation;\n      this.ownerPoints = response.data.ownerPointsPerReservation;\n      this.primaryValue1 = response.data.clientPointsPerReservation;\n      this.primaryValue2 = response.data.ownerPointsPerReservation;\n      this.categories.forEach(category => {\n        this.loadImage(category.icon, this.categories.indexOf(category));\n      });\n      toggleLoading();\n    }).catch(() => {\n      this.$notify({\n        title: \"Server error\",\n        text: \"Server is currently off. Please try again later...\",\n        type: \"error\"\n      });\n      toggleLoading();\n    });\n  },\n\n  methods: {\n    loadImage(name, index) {\n      axios.get(\"/Photos/\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        },\n        params: {\n          path: name\n        },\n        responseType: \"blob\"\n      }).then(response => {\n        this.imageUrls[index] = URL.createObjectURL(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    deleteCategory(categoryId) {\n      axios.delete(\"/LoyaltyProgram/deleteCategory\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        },\n        params: {\n          id: categoryId\n        }\n      }).then(response => {\n        this.categories = response.data.loyaltyCategories;\n        this.clientPoints = response.data.clientPointsPerReservation;\n        this.ownerPoints = response.data.ownerPointsPerReservation;\n        this.categories.forEach(category => {\n          this.loadImage(category.icon, this.categories.indexOf(category));\n        });\n      }).catch(() => {\n        this.$notify({\n          title: \"Server error\",\n          text: \"Server is currently off. Please try again later...\",\n          type: \"error\"\n        });\n      });\n    },\n\n    updateProgram() {\n      toggleProcessing();\n      const cp = this.clientPoints;\n      const op = this.ownerPoints;\n      axios.put(\"/LoyaltyProgram/updateProgram\", null, {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        },\n        params: {\n          clientPointsPerReservation: cp,\n          ownerPointsPerReservation: op\n        }\n      }).then(response => {\n        this.categories = response.data.loyaltyCategories;\n        this.clientPoints = response.data.clientPointsPerReservation;\n        this.ownerPoints = response.data.ownerPointsPerReservation;\n        this.primaryValue1 = response.data.clientPointsPerReservation;\n        this.primaryValue2 = response.data.ownerPointsPerReservation;\n        this.categories.forEach(category => {\n          this.loadImage(category.icon, this.categories.indexOf(category));\n        });\n        this.$notify({\n          title: \"Successful update\",\n          text: \"You have successfully updated the loyalty program.\",\n          position: \"bottom right\",\n          type: \"success\"\n        });\n        toggleProcessing();\n      }).catch(() => {\n        this.$notify({\n          title: \"Server error\",\n          text: \"Server is currently off. Please try again later...\",\n          type: \"error\"\n        });\n        toggleProcessing();\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["FontAwesomeIcon","library","faPlus","faTrash","useStore","axios","toggleLoading","toggleProcessing","add","name","components","data","primaryValue1","primaryValue2","categories","clientPoints","ownerPoints","imageUrls","mounted","store","get","headers","Authorization","getters","access_token","then","response","loyaltyCategories","clientPointsPerReservation","ownerPointsPerReservation","forEach","category","loadImage","icon","indexOf","catch","$notify","title","text","type","methods","index","$store","params","path","responseType","URL","createObjectURL","error","console","log","deleteCategory","categoryId","delete","id","updateProgram","cp","op","put","position"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\Administrator\\AdminPage\\components\\AdminMainViews\\AdminLoyaltyProgramComponents\\LoyaltyProgramView.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-10 pt-5 mb-5\">\r\n      <div class=\"row container-fluid pe-0 ps-0 me-0 ms-0\">\r\n        <div class=\"col-4 text-center\">\r\n          <div class=\"rounded shadow p-3\">\r\n            <h3 style=\"color: #008970\" class=\"mb-3\">Loyalty Program</h3>\r\n            <label for=\"client\" style=\"color: #008970\">Client Points Per Reservation</label>\r\n            <input v-model=\"clientPoints\" type=\"number\" :min=0 id=\"client\" class=\"form-control mb-2\">\r\n            <label for=\"owner\" style=\"color: #008970\">Owner Points Per Reservation</label>\r\n            <input v-model=\"ownerPoints\" type=\"number\" :min=0 id=\"owner\" class=\"form-control\">\r\n            <button type=\"button\" :disabled=\"primaryValue1===clientPoints&&primaryValue2===ownerPoints\" class=\"btn mt-2\" data-bs-toggle=\"modal\" data-bs-target=\"#confirmationDialog1\">Update</button>\r\n            <div class=\"modal fade\" id=\"confirmationDialog1\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel1\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel1\">Loyalty Program Update</h5>\r\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    Do you want to change loyalty program?\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-red\" style=\"margin-right: 2vh;\" data-bs-dismiss=\"modal\">No</button>\r\n                    <button type=\"button\" class=\"btn\" @click.prevent=\"updateProgram\" data-bs-dismiss=\"modal\">Yes</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"align-items-center\">\r\n            <div class=\"row main-col\">\r\n              <div class=\"col d-flex justify-content-end pe-0 me-0\">\r\n                <router-link to=\"/admin/loyaltyProgram/newCategory\" class=\"btn btn-default mb-1 d-flex my-auto\">\r\n                  <font-awesome-icon class=\"my-auto pe-2\" icon=\"plus\"></font-awesome-icon>\r\n                  Add Category\r\n                </router-link>\r\n              </div>\r\n            </div>\r\n            <div class=\"row main-col text-center header rounded mb-3\">\r\n              <table>\r\n                <thead>\r\n                <tr>\r\n                  <th>Icon</th>\r\n                  <th>Name</th>\r\n                  <th>Points</th>\r\n                  <th>Client Discount</th>\r\n                  <th>Owner Bonus</th>\r\n                  <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr v-for=\"(category, index) in this.categories\" :key=\"index\" :class=\"index%2!==0?'odd':'even'\">\r\n                  <td>\r\n                    <img :src=\"imageUrls[index]\" style=\"height: 50px;width: 50px; object-fit: cover; object-position: center;\" class=\"img-fluid rounded p-0\" alt=\"\">\r\n                  </td>\r\n                  <td>{{category.name}}</td>\r\n                  <td>{{category.requiredPoints}}</td>\r\n                  <td>{{category.clientDiscount.toFixed(2)}}%</td>\r\n                  <td>{{category.ownerBenefit.toFixed(2)}}%</td>\r\n                  <td>\r\n                    <button class=\"btn btn-red\" data-bs-toggle=\"modal\" :data-bs-target=\"'#confirmationDialog'+category.id\" ><font-awesome-icon icon=\"trash\"></font-awesome-icon></button>\r\n                    <div class=\"modal fade\" :id=\"'confirmationDialog'+category.id\" tabindex=\"-1\" :aria-labelledby=\"'exampleModalLabel'+category.id\" aria-hidden=\"true\">\r\n                      <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                          <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" :id=\"'exampleModalLabel'+category.id\">Category Deletion</h5>\r\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                          </div>\r\n                          <div class=\"modal-body\">\r\n                            Do you want to delete user category '{{category.name}}'?\r\n                          </div>\r\n                          <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-red\" style=\"margin-right: 2vh;\" data-bs-dismiss=\"modal\">No</button>\r\n                            <button type=\"button\" class=\"btn\" @click=\"deleteCategory(category.id)\" data-bs-dismiss=\"modal\">Yes</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useStore} from \"vuex\";\r\nimport axios from \"axios\";\r\nimport {toggleLoading, toggleProcessing} from \"@/components/state\";\r\n\r\nlibrary.add(faPlus, faTrash);\r\n\r\nexport default {\r\n  name: \"LoyaltyProgramView\",\r\n  components: {FontAwesomeIcon},\r\n  data() {\r\n    return {\r\n      primaryValue1: null,\r\n      primaryValue2: null,\r\n      categories: [],\r\n      clientPoints: null,\r\n      ownerPoints: null,\r\n      imageUrls: []\r\n    }\r\n  },\r\n  mounted() {\r\n    toggleLoading();\r\n    const store = useStore();\r\n    axios.get(\"/LoyaltyProgram/getProgram\", {headers: {\r\n        Authorization: \"Bearer \" + store.getters.access_token,\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.categories = response.data.loyaltyCategories;\r\n      this.clientPoints = response.data.clientPointsPerReservation;\r\n      this.ownerPoints = response.data.ownerPointsPerReservation;\r\n      this.primaryValue1 = response.data.clientPointsPerReservation;\r\n      this.primaryValue2 = response.data.ownerPointsPerReservation;\r\n      this.categories.forEach(category => {\r\n        this.loadImage(category.icon, this.categories.indexOf(category));\r\n      });\r\n      toggleLoading();\r\n    })\r\n    .catch(() =>{\r\n      this.$notify({\r\n        title: \"Server error\",\r\n        text: \"Server is currently off. Please try again later...\",\r\n        type: \"error\"\r\n      });\r\n      toggleLoading();\r\n    });\r\n  },\r\n  methods: {\r\n    loadImage(name, index) {\r\n      axios.get(\"/Photos/\", {headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        },\r\n        params: {\r\n          path: name,\r\n        },\r\n        responseType: \"blob\"\r\n      })\r\n      .then(response => {\r\n        this.imageUrls[index] = URL.createObjectURL(response.data);\r\n      })\r\n      .catch((error) =>{\r\n        console.log(error);\r\n      });\r\n    },\r\n    deleteCategory(categoryId) {\r\n      axios.delete(\"/LoyaltyProgram/deleteCategory\", {headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        },\r\n        params: {\r\n          id: categoryId\r\n        }\r\n      })\r\n      .then((response) => {\r\n        this.categories = response.data.loyaltyCategories;\r\n        this.clientPoints = response.data.clientPointsPerReservation;\r\n        this.ownerPoints = response.data.ownerPointsPerReservation;\r\n        this.categories.forEach(category => {\r\n          this.loadImage(category.icon, this.categories.indexOf(category));\r\n        });\r\n      })\r\n      .catch(() =>{\r\n        this.$notify({\r\n          title: \"Server error\",\r\n          text: \"Server is currently off. Please try again later...\",\r\n          type: \"error\"\r\n        });\r\n      })\r\n    },\r\n    updateProgram() {\r\n      toggleProcessing();\r\n      const cp = this.clientPoints;\r\n      const op = this.ownerPoints;\r\n      axios.put(\"/LoyaltyProgram/updateProgram\", null, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        },\r\n        params: {\r\n          clientPointsPerReservation: cp,\r\n          ownerPointsPerReservation: op\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.categories = response.data.loyaltyCategories;\r\n        this.clientPoints = response.data.clientPointsPerReservation;\r\n        this.ownerPoints = response.data.ownerPointsPerReservation;\r\n        this.primaryValue1 = response.data.clientPointsPerReservation;\r\n        this.primaryValue2 = response.data.ownerPointsPerReservation;\r\n        this.categories.forEach(category => {\r\n          this.loadImage(category.icon, this.categories.indexOf(category));\r\n        });\r\n        this.$notify( {\r\n          title: \"Successful update\",\r\n          text: \"You have successfully updated the loyalty program.\",\r\n          position: \"bottom right\",\r\n          type: \"success\"\r\n        });\r\n        toggleProcessing();\r\n      })\r\n      .catch(() =>{\r\n        this.$notify({\r\n          title: \"Server error\",\r\n          text: \"Server is currently off. Please try again later...\",\r\n          type: \"error\"\r\n        });\r\n        toggleProcessing()\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}