{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d6b7bc00\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"row\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-2\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"col-8 pt-5\"\n};\nconst _hoisted_4 = {\n  class: \"px-4 py-3 rounded content-center form\"\n};\nconst _hoisted_5 = {\n  class: \"row\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-2\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"col-8\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-text\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Password change\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputPassword1\"\n}, \"Old Password\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = {\n  key: 0,\n  style: {\n    \"color\": \"#e23c52\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputPassword2\"\n}, \"New Password\", -1\n/* HOISTED */\n));\n\nconst _hoisted_14 = {\n  key: 0,\n  style: {\n    \"color\": \"#e23c52\"\n  }\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"small\", {\n  id: \"passwordHelpBlock\",\n  class: \"form-text text-muted\"\n}, \" Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji. \", -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\n\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputPassword3\"\n}, \"Confirm Password\", -1\n/* HOISTED */\n));\n\nconst _hoisted_18 = {\n  key: 0,\n  style: {\n    \"color\": \"#e23c52\"\n  }\n};\nconst _hoisted_19 = {\n  class: \"text-center\"\n};\nconst _hoisted_20 = [\"disabled\"];\n\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-2\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-2\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"inputPassword1\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.oldPassword = $event),\n    class: \"form-control col-sm-auto col-lg-4\",\n    \"aria-describedby\": \"passwordHelpBlock\",\n    placeholder: \"Old password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.oldPassword]]), !$options.isNewPassword ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"New password can't be same as old.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"inputPassword2\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: \"form-control col-sm-auto col-lg-4\",\n    \"aria-describedby\": \"passwordHelpBlock\",\n    placeholder: \"New password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]]), !$options.passwordValidation.valid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_14, _toDisplayString($options.passwordValidation.errors[0]), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _hoisted_15]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"inputPassword3\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.checkPassword = $event),\n    class: \"form-control col-sm-auto col-lg-4\",\n    \"aria-describedby\": \"passwordHelpBlock\",\n    placeholder: \"Confirm password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.checkPassword, void 0, {\n    lazy: true\n  }]]), $options.notSamePasswords ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, \"Passwords don't match.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"button\", {\n    class: \"btn mt-3\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.resetPasswords && $options.resetPasswords(...args), [\"prevent\"])),\n    disabled: $options.isDisabled\n  }, \" Submit \", 8\n  /* PROPS */\n  , _hoisted_20)])]), _hoisted_21])])]), _hoisted_22]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","style","id","_createElementBlock","_hoisted_2","_hoisted_6","_hoisted_8","_hoisted_10","type","$data","$event","placeholder","$options","_hoisted_13","valid","_toDisplayString","errors","_hoisted_15","_hoisted_17","onClick","disabled","_hoisted_20","_hoisted_21","_hoisted_22"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\GeneralComponents\\UserAccountForms\\PasswordChangeForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-8 pt-5\">\r\n      <form class=\"px-4 py-3 rounded content-center form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <div class=\"form-text\">\r\n              <h3>Password change</h3>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"inputPassword1\">Old Password</label>\r\n              <input type=\"password\" id=\"inputPassword1\" v-model=\"oldPassword\" class=\"form-control col-sm-auto col-lg-4\" aria-describedby=\"passwordHelpBlock\" placeholder=\"Old password\">\r\n              <p style=\"color: #e23c52\" v-if='!isNewPassword'>New password can't be same as old.</p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"inputPassword2\">New Password</label>\r\n              <input type=\"password\" id=\"inputPassword2\" v-model=password class=\"form-control col-sm-auto col-lg-4\" aria-describedby=\"passwordHelpBlock\" placeholder=\"New password\">\r\n              <p style=\"color: #e23c52\" v-if='!passwordValidation.valid'>{{ passwordValidation.errors[0] }}</p>\r\n              <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\r\n                Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\r\n              </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"inputPassword3\">Confirm Password</label>\r\n              <input type=\"password\" id=\"inputPassword3\" v-model.lazy='checkPassword' class=\"form-control col-sm-auto col-lg-4\" aria-describedby=\"passwordHelpBlock\" placeholder=\"Confirm password\">\r\n              <p style=\"color: #e23c52\" v-if='notSamePasswords'>Passwords don't match.</p>\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <button class=\"btn mt-3\" @click.prevent='resetPasswords' :disabled='isDisabled'>\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios/index\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"PasswordChangeForm\",\r\n  data () {\r\n    return {\r\n      rules: [\r\n        { message:'One lowercase letter required.', regex:/[a-z]+/ },\r\n        { message:\"One uppercase letter required.\",  regex:/[A-Z]+/ },\r\n        { message:\"8-20 characters required.\", regex:/.{8,20}/ },\r\n        { message:\"One number required.\", regex:/[0-9]+/ }\r\n      ],\r\n      oldPassword:'',\r\n      password:'',\r\n      checkPassword:'',\r\n      submitted:false,\r\n      type:'password'\r\n    }\r\n  },\r\n  methods: {\r\n    resetPasswords () {\r\n      axios.put(\"/Users/passChange\", {\r\n        email: this.email,\r\n        oldPassword: this.oldPassword,\r\n        newPassword: this.password\r\n      }, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.accessToken\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.$notify({\r\n          title: \"Password Change Notification\",\r\n          text: \"Password change was successful.\",\r\n          position: \"bottom right\",\r\n          type: \"success\"\r\n        });\r\n        this.$store.dispatch(\"first_login\", false);\r\n      })\r\n      .catch((error) =>{\r\n        if (error.response.status===404) {\r\n          this.$notify({\r\n            title: \"User Not Found\",\r\n            text: \"User with the specified e-mail was not found!\" ,\r\n            type: \"warn\"\r\n          })\r\n        } else if (error.response.status===401) {\r\n          this.$notify({\r\n            title: \"Authorization Failed\",\r\n            text: \"Old Password is not valid!\",\r\n            type: \"error\"\r\n          })\r\n        } else if (error.response.status===500) {\r\n          this.$notify({\r\n            title: \"Internal Server Error\",\r\n            text: \"Something went wrong on the server! Please try again later...\",\r\n            type: \"error\"\r\n          })\r\n        }\r\n      });\r\n    }\r\n  },\r\n  computed: {\r\n    isDisabled() {\r\n      return !(this.passwordsFilled && !this.notSamePasswords && this.passwordValidation.valid) && this.isNewPassword\r\n    },\r\n    isNewPassword() {\r\n      if (this.passwordsFilled) {\r\n        return this.oldPassword !== this.password;\r\n      }\r\n      return true;\r\n    },\r\n    notSamePasswords () {\r\n      if (this.passwordsFilled) {\r\n        return (this.password !== this.checkPassword)\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    passwordsFilled () {\r\n      return (this.oldPassword !== '' && this.password !== '' && this.checkPassword !== '')\r\n    },\r\n    passwordValidation () {\r\n      let errors = []\r\n      if (this.password !== ''){\r\n        for (let condition of this.rules) {\r\n          if (!condition.regex.test(this.password)) {\r\n            errors.push(condition.message)\r\n          }\r\n        }\r\n        if (errors.length === 0) {\r\n          return { valid:true, errors }\r\n        } else {\r\n          return { valid:false, errors }\r\n        }\r\n      }\r\n      else {\r\n        return { valid:true, errors }\r\n      }\r\n    },\r\n    accessToken() {\r\n      return store.state.access_token;\r\n    },\r\n    email() {\r\n      return store.state.email;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}