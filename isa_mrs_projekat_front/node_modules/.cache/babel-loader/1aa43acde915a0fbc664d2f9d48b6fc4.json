{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-ac1dac76\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"h4\"\n};\nconst _hoisted_2 = {\n  class: \"map-wrap\"\n};\nconst _hoisted_3 = {\n  class: \"map\",\n  ref: \"mapContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", _hoisted_1, [_createVNode(_component_font_awesome_icon, {\n    class: \"me-1\",\n    icon: \"location-dot\",\n    style: {\n      \"color\": \"#008970\"\n    }\n  }), _createElementVNode(\"small\", null, _toDisplayString($options.getAddress), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, null, 512\n  /* NEED_PATCH */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AACKA,OAAK,EAAC;;;AAGJA,OAAK,EAAC;;;AACJA,OAAK,EAAC;AAAMC,KAAG,EAAC;;;;;6DAJvBC,oBAEI,GAFJ,cAEI,CADFC,aAA+FC,4BAA/F,EAA+F;AAA5EJ,SAAK,EAAC,MAAsE;AAA/DK,QAAI,EAAC,cAA0D;AAA3CC,SAAsB,EAAtB;AAAA;AAAA;AAA2C,GAA/F,CACE,EAD6FJ,oBAA+B,OAA/B,EAA+B,IAA/B,EAA+BK,iBAArBC,mBAAqB,CAA/B,EAAoB;AAAA;AAApB,GAC7F,CAFJ,GAGAN,oBAEM,KAFN,cAEM,CADJA,oBAA0C,KAA1C,cAA0C,IAA1C,EAA0C;AAAA;AAA1C,GACI,CAFN","names":["class","ref","_createElementVNode","_createVNode","_component_font_awesome_icon","icon","style","_toDisplayString","$options"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\UnregisteredUser\\components\\Rental\\RentalAddress.vue"],"sourcesContent":["<template>\r\n  <p class=\"h4\">\r\n    <font-awesome-icon class=\"me-1\" icon=\"location-dot\" style=\"color: #008970\"></font-awesome-icon><small>{{ getAddress }}</small>\r\n  </p>\r\n  <div class=\"map-wrap\">\r\n    <div class=\"map\" ref=\"mapContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faLocationDot } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Map, NavigationControl, Marker } from 'maplibre-gl';\r\nimport { shallowRef, onMounted, onUnmounted, markRaw } from 'vue';\r\n\r\nlibrary.add(faLocationDot);\r\n\r\nexport default {\r\n  name: \"RentalAddress\",\r\n  components: {FontAwesomeIcon},\r\n  props: [\"address\"],\r\n  setup (props) {\r\n    const mapContainer = shallowRef(null);\r\n    const map = shallowRef(null);\r\n\r\n    onMounted(() => {\r\n      const apiKey = 'nhoszMgknD7huJIF4K2D';\r\n\r\n      const initialState = { lng: props.address.longitude, lat: props.address.latitude, zoom: 14 };\r\n\r\n      map.value = markRaw(new Map({\r\n        container: mapContainer.value,\r\n        style: `https://api.maptiler.com/maps/streets/style.json?key=${apiKey}`,\r\n        center: [initialState.lng, initialState.lat],\r\n        zoom: initialState.zoom\r\n      }));\r\n      map.value.addControl(new NavigationControl(), 'top-right');\r\n      new Marker({color: \"#e23c52\"})\r\n          .setLngLat([props.address.longitude, props.address.latitude])\r\n          .addTo(map.value);\r\n\r\n    }),\r\n        onUnmounted(() => {\r\n          map.value?.remove();\r\n        })\r\n\r\n    return {\r\n      map, mapContainer\r\n    };\r\n  },\r\n  computed: {\r\n    getAddress() {\r\n      return this.address.street + (this.address.number? ' ' +this.address.number:\"\") + ', ' + this.address. city + ', ' + this.address.country\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '~maplibre-gl/dist/maplibre-gl.css';\r\n\r\n.map-wrap {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 30vh; /* calculate height of the screen minus the heading */\r\n}\r\n\r\n.map {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}