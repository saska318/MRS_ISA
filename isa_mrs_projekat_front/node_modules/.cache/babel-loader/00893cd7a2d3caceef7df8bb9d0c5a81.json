{"ast":null,"code":"import { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faAngleRight, faAngleDoubleRight, faAngleLeft, faAngleDoubleLeft, faFrown } from \"@fortawesome/free-solid-svg-icons\";\nimport AdminRequestPreview from \"@/components/Administrator/AdminPage/components/AdminMainViews/AdminRequestsView/AdminRequestPreview/AdminRequestPreview\";\nimport axios from \"axios/index\";\nimport { useStore } from \"vuex\";\nlibrary.add(faAngleRight, faAngleLeft, faFrown, faAngleDoubleRight, faAngleDoubleLeft);\nexport default {\n  name: \"AdminRequestsView\",\n  components: {\n    FontAwesomeIcon,\n    AdminRequestPreview\n  },\n\n  data() {\n    return {\n      requests: null,\n      numberOfPages: null,\n      currentPage: 0,\n      pageSize: 30,\n      requestTypes: []\n    };\n  },\n\n  mounted() {\n    const store = useStore();\n    axios.get(\"/Requests/requests\", {\n      headers: {\n        Authorization: \"Bearer \" + store.state.access_token\n      },\n      params: {\n        page: this.currentPage,\n        pageSize: this.pageSize,\n        field: \"timeStamp\",\n        types: \"all\"\n      }\n    }).then(response => {\n      this.requests = response.data.content;\n      this.numberOfPages = response.data.pages;\n    });\n  },\n\n  methods: {\n    filterRequests() {\n      let requestType = this.getFilter;\n      this.currentPage = 0;\n      axios.get(\"/Requests/requests\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.state.access_token\n        },\n        params: {\n          page: this.currentPage,\n          pageSize: this.pageSize,\n          field: \"timeStamp\",\n          types: requestType\n        }\n      }).then(response => {\n        this.requests = response.data.content;\n        this.numberOfPages = response.data.pages;\n      });\n    },\n\n    nextPage() {\n      let requestType = this.getFilter;\n      this.currentPage += 1;\n      axios.get(\"/Requests/requests\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.state.access_token\n        },\n        params: {\n          page: this.currentPage,\n          pageSize: this.pageSize,\n          field: \"timeStamp\",\n          types: requestType\n        }\n      }).then(response => {\n        this.requests = response.data.content;\n        this.numberOfPages = response.data.pages;\n      });\n    },\n\n    prevPage() {\n      let requestType = this.getFilter;\n      this.currentPage -= 1;\n      axios.get(\"/Requests/requests\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.state.access_token\n        },\n        params: {\n          page: this.currentPage,\n          pageSize: this.pageSize,\n          field: \"timeStamp\",\n          types: requestType\n        }\n      }).then(response => {\n        this.requests = response.data.content;\n        this.numberOfPages = response.data.pages;\n      });\n    },\n\n    lastPage() {\n      let requestType = this.getFilter;\n      this.currentPage = this.numberOfPages;\n      axios.get(\"/Requests/requests\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.state.access_token\n        },\n        params: {\n          page: this.currentPage,\n          pageSize: this.pageSize,\n          field: \"timeStamp\",\n          types: requestType\n        }\n      }).then(response => {\n        this.requests = response.data.content;\n        this.numberOfPages = response.data.pages;\n      });\n    }\n\n  },\n  computed: {\n    getFilter() {\n      let requestType;\n\n      if (this.requestTypes.length === 2 || this.requestTypes.length === 0) {\n        requestType = \"all\";\n      } else {\n        requestType = this.requestTypes[0];\n      }\n\n      return requestType;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["FontAwesomeIcon","library","faAngleRight","faAngleDoubleRight","faAngleLeft","faAngleDoubleLeft","faFrown","AdminRequestPreview","axios","useStore","add","name","components","data","requests","numberOfPages","currentPage","pageSize","requestTypes","mounted","store","get","headers","Authorization","state","access_token","params","page","field","types","then","response","content","pages","methods","filterRequests","requestType","getFilter","$store","nextPage","prevPage","lastPage","computed","length"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\MRS_ISA\\isa_mrs_projekat_front\\src\\components\\Administrator\\AdminPage\\components\\AdminMainViews\\AdminRequestsView\\AdminRequestsView.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-8 pt-5 mb-5\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"align-items-center\">\r\n          <div class=\"row  main-col align-items-end\">\r\n            <div class=\"col-md-3 main-col\">\r\n              <div class=\"form-check form-check-inline\">\r\n                <label class=\"custom-control custom-checkbox\">\r\n                  <input type=\"checkbox\" id=\"checkbox1\" class=\"custom-control-input\" v-model=\"requestTypes\" value=\"SignUp\" @change=\"filterRequests\">\r\n                  <span class=\"custom-control-indicator\"></span>\r\n                  <span class=\"custom-control-label\">Sign Up Requests</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6 main-col\">\r\n              <div class=\"pl-2\" style=\"display: flex\">\r\n                <label class=\"custom-control custom-checkbox\">\r\n                  <input type=\"checkbox\" id=\"checkbox2\" class=\"custom-control-input\" v-model=\"requestTypes\" value=\"AccountDeletion\" @change=\"filterRequests\">\r\n                  <span class=\"custom-control-indicator\"></span>\r\n                  <span class=\"custom-control-label\">Account Deletion Requests</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Reviews listing -->\r\n          <AdminRequestPreview v-for=\"(request, index) in this.requests\" @requestManaged=\"filterRequests\" :key=\"index\" :request=\"request\"/>\r\n          <!-- Pagination -->\r\n          <ul class=\"pagination justify-content-center\">\r\n            <li class=\"page-item\" v-if=\"numberOfPages>2 && currentPage>1\">\r\n              <button class=\"page-link\" @click=\"filterRequests\">\r\n                <font-awesome-icon icon=\"angle-double-left\"/>\r\n              </button>\r\n            </li>\r\n            <li class=\"page-item\" v-if=\"numberOfPages>0 && currentPage>0\">\r\n              <button class=\"page-link\" @click=\"prevPage\">\r\n                <font-awesome-icon icon=\"angle-left\"/>\r\n              </button>\r\n            </li>\r\n            <li class=\"page-item\">\r\n              <h4 v-if=\"!requests\" class=\"no-result\"> NO RESULTS!<font-awesome-icon icon=\"frown\"/></h4>\r\n              <h4 v-else-if=\"numberOfPages!==1\">{{currentPage+1}}/{{numberOfPages}}</h4>\r\n              <h4 v-else>{{currentPage+1}}</h4>\r\n            </li>\r\n            <li class=\"page-item\" v-if=\"numberOfPages>0 && currentPage+1!==numberOfPages\">\r\n              <button class=\"page-link\" @click=\"nextPage\">\r\n                <font-awesome-icon icon=\"angle-right\"/>\r\n              </button>\r\n            </li>\r\n            <li class=\"page-item\" v-if=\"numberOfPages>0 && currentPage<numberOfPages-2\">\r\n              <button class=\"page-link\" @click=\"lastPage\">\r\n                <font-awesome-icon icon=\"angle-double-right\"/>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faAngleRight, faAngleDoubleRight, faAngleLeft, faAngleDoubleLeft, faFrown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport AdminRequestPreview\r\n  from \"@/components/Administrator/AdminPage/components/AdminMainViews/AdminRequestsView/AdminRequestPreview/AdminRequestPreview\";\r\nimport axios from \"axios/index\";\r\nimport { useStore } from \"vuex\"\r\n\r\nlibrary.add(faAngleRight, faAngleLeft, faFrown, faAngleDoubleRight, faAngleDoubleLeft);\r\n\r\nexport default {\r\n  name: \"AdminRequestsView\",\r\n  components: {\r\n    FontAwesomeIcon,\r\n    AdminRequestPreview\r\n  },\r\n  data() {\r\n    return {\r\n      requests: null,\r\n      numberOfPages: null,\r\n      currentPage: 0,\r\n      pageSize: 30,\r\n      requestTypes: [],\r\n    }\r\n  },\r\n  mounted() {\r\n    const store = useStore();\r\n    axios.get(\"/Requests/requests\", {headers: {\r\n        Authorization: \"Bearer \" + store.state.access_token,\r\n      },\r\n      params: {\r\n        page: this.currentPage,\r\n        pageSize: this.pageSize,\r\n        field: \"timeStamp\",\r\n        types: \"all\"\r\n      }},\r\n    ).then(response => {\r\n      this.requests = response.data.content;\r\n      this.numberOfPages = response.data.pages;\r\n    });\r\n  },\r\n  methods: {\r\n    filterRequests() {\r\n      let requestType = this.getFilter;\r\n      this.currentPage = 0;\r\n      axios.get(\"/Requests/requests\", {\r\n            headers: {\r\n              Authorization: \"Bearer \" + this.$store.state.access_token,\r\n            },\r\n            params: {\r\n              page: this.currentPage,\r\n              pageSize: this.pageSize,\r\n              field: \"timeStamp\",\r\n              types: requestType\r\n            }\r\n          },\r\n      ).then(response => {\r\n        this.requests = response.data.content;\r\n        this.numberOfPages = response.data.pages;\r\n      });\r\n    },\r\n    nextPage() {\r\n      let requestType = this.getFilter;\r\n      this.currentPage += 1;\r\n      axios.get(\"/Requests/requests\", {\r\n            headers: {\r\n              Authorization: \"Bearer \" + this.$store.state.access_token,\r\n            },\r\n            params: {\r\n              page: this.currentPage,\r\n              pageSize: this.pageSize,\r\n              field: \"timeStamp\",\r\n              types: requestType\r\n            }\r\n          },\r\n      ).then(response => {\r\n        this.requests = response.data.content;\r\n        this.numberOfPages = response.data.pages;\r\n      });\r\n    },\r\n    prevPage() {\r\n      let requestType = this.getFilter;\r\n      this.currentPage -= 1;\r\n      axios.get(\"/Requests/requests\", {\r\n            headers: {\r\n              Authorization: \"Bearer \" + this.$store.state.access_token,\r\n            },\r\n            params: {\r\n              page: this.currentPage,\r\n              pageSize: this.pageSize,\r\n              field: \"timeStamp\",\r\n              types: requestType\r\n            }\r\n          },\r\n      ).then(response => {\r\n        this.requests = response.data.content;\r\n        this.numberOfPages = response.data.pages;\r\n      });\r\n    },\r\n    lastPage() {\r\n      let requestType = this.getFilter;\r\n      this.currentPage = this.numberOfPages;\r\n      axios.get(\"/Requests/requests\", {\r\n            headers: {\r\n              Authorization: \"Bearer \" + this.$store.state.access_token,\r\n            },\r\n            params: {\r\n              page: this.currentPage,\r\n              pageSize: this.pageSize,\r\n              field: \"timeStamp\",\r\n              types: requestType\r\n            }\r\n          },\r\n      ).then(response => {\r\n        this.requests = response.data.content;\r\n        this.numberOfPages = response.data.pages;\r\n      });\r\n    }\r\n  },\r\n  computed: {\r\n    getFilter() {\r\n      let requestType;\r\n      if (this.requestTypes.length === 2 || this.requestTypes.length === 0) {\r\n        requestType = \"all\";\r\n      }\r\n      else {\r\n        requestType = this.requestTypes[0];\r\n      }\r\n      return requestType;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .container-fluid {\r\n    padding-right:0;\r\n    padding-left:0;\r\n    margin-right:0;\r\n    margin-left:0;\r\n  }\r\n\r\n  .page-link {\r\n    color: #378220;\r\n  }\r\n\r\n  h4.no-result {\r\n    color: red;\r\n    align-self: center;\r\n  }\r\n\r\n  h4 {\r\n    vertical-align: center;\r\n    margin-right: 3px;\r\n    margin-left: 3px;\r\n    color: #378220\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}