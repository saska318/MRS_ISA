{"ast":null,"code":"import StarRating from \"vue-star-rating\";\nimport axios from \"axios\";\nexport default {\n  name: \"InstructorProfileReviews\",\n  props: [\"reviews\", \"grade\"],\n  components: {\n    StarRating\n  },\n\n  data() {\n    return {\n      images: [],\n      sortedReviews: []\n    };\n  },\n\n  computed: {\n    ownerHasReviews() {\n      return this.reviews.length > 0;\n    }\n\n  },\n  methods: {\n    getAuthorFullName(review) {\n      return review.author.name + \" \" + review.author.surname;\n    },\n\n    formatReviewDate(reviewTime) {\n      let date = new Date(reviewTime);\n      return date.getDate() + '.' + (date.getMonth() + 1) + '.' + date.getFullYear() + '. at ' + date.getHours() + ':' + ((date.getMinutes() < 10 ? '0' : '') + date.getMinutes());\n    }\n\n  },\n\n  mounted() {\n    this.sortedReviews = this.reviews;\n    this.sortedReviews = this.sortedReviews.sort((a, b) => new Date(b.timeStamp) > new Date(a.timeStamp) ? 1 : -1);\n    this.images = [];\n\n    for (let i = 0; i < this.sortedReviews.length; i++) {\n      if (!this.reviews[i].author.photo) {\n        this.images[i] = null;\n        continue;\n      }\n\n      axios.get(\"/Photos/\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        },\n        params: {\n          path: this.reviews[i].author.photo\n        },\n        responseType: \"blob\"\n      }).then(response => {\n        this.images[i] = URL.createObjectURL(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,MAAI,EAAE,0BADO;AAEbC,OAAK,EAAE,CAAC,SAAD,EAAY,OAAZ,CAFM;AAGbC,YAAU,EAAE;AAACJ;AAAD,GAHC;;AAIbK,MAAI,GAAG;AACL,WAAO;AACLC,YAAM,EAAE,EADH;AAELC,mBAAa,EAAE;AAFV,KAAP;AAID,GATY;;AAUbC,UAAQ,EAAE;AACRC,mBAAe,GAAG;AAChB,aAAO,KAAKC,OAAL,CAAaC,MAAb,GAAsB,CAA7B;AACF;;AAHQ,GAVG;AAebC,SAAO,EAAE;AACPC,qBAAiB,CAACC,MAAD,EAAS;AACxB,aAAOA,MAAM,CAACC,MAAP,CAAcb,IAAd,GAAqB,GAArB,GAA2BY,MAAM,CAACC,MAAP,CAAcC,OAAhD;AACD,KAHM;;AAIPC,oBAAgB,CAACC,UAAD,EAAa;AAC3B,UAAIC,IAAG,GAAI,IAAIC,IAAJ,CAASF,UAAT,CAAX;AACA,aAAOC,IAAI,CAACE,OAAL,KAAiB,GAAjB,IAAwBF,IAAI,CAACG,QAAL,KAAkB,CAA1C,IAA+C,GAA/C,GAAsDH,IAAI,CAACI,WAAL,EAAtD,GAA2E,OAA3E,GACDJ,IAAI,CAACK,QAAL,EADC,GACiB,GADjB,IACyB,CAACL,IAAI,CAACM,UAAL,KAAkB,EAAlB,GAAqB,GAArB,GAAyB,EAA1B,IAAgCN,IAAI,CAACM,UAAL,EADzD,CAAP;AAED;;AARM,GAfI;;AAyBbC,SAAO,GAAG;AACR,SAAKnB,aAAL,GAAqB,KAAKG,OAA1B;AACA,SAAKH,aAAL,GAAqB,KAAKA,aAAL,CAAmBoB,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIT,IAAJ,CAASS,CAAC,CAACC,SAAX,IAAwB,IAAIV,IAAJ,CAASQ,CAAC,CAACE,SAAX,CAAxB,GAAgD,CAAhD,GAAmD,CAAC,CAAtF,CAArB;AACA,SAAKxB,MAAL,GAAc,EAAd;;AACA,SAAI,IAAIyB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKxB,aAAL,CAAmBI,MAAlC,EAA0CoB,CAAC,EAA3C,EAA+C;AAC7C,UAAG,CAAC,KAAKrB,OAAL,CAAaqB,CAAb,EAAgBhB,MAAhB,CAAuBiB,KAA3B,EAAkC;AAAE,aAAK1B,MAAL,CAAYyB,CAAZ,IAAiB,IAAjB;AAAuB;AAAU;;AACrE9B,WAAK,CAACgC,GAAN,CAAU,UAAV,EAAsB;AACpBC,eAAO,EAAE;AACPC,uBAAa,EAAE,YAAY,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC;AADxC,SADW;AAIpBC,cAAM,EAAE;AACNC,cAAI,EAAE,KAAK9B,OAAL,CAAaqB,CAAb,EAAgBhB,MAAhB,CAAuBiB;AADvB,SAJY;AAOpBS,oBAAY,EAAE;AAPM,OAAtB,EASCC,IATD,CASMC,QAAO,IAAK;AAChB,aAAKrC,MAAL,CAAYyB,CAAZ,IAAiBa,GAAG,CAACC,eAAJ,CAAoBF,QAAQ,CAACtC,IAA7B,CAAjB;AACD,OAXD,EAYCyC,KAZD,CAYQC,KAAD,IAAW;AAChBC,eAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAdD;AAeF;AACF;;AA/Ca,CAAf","names":["StarRating","axios","name","props","components","data","images","sortedReviews","computed","ownerHasReviews","reviews","length","methods","getAuthorFullName","review","author","surname","formatReviewDate","reviewTime","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","mounted","sort","a","b","timeStamp","i","photo","get","headers","Authorization","$store","getters","access_token","params","path","responseType","then","response","URL","createObjectURL","catch","error","console","log"],"sourceRoot":"","sources":["C:\\Users\\Saška\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\UnregisteredUser\\components\\Instructor\\InstructorProfileReviews.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"reviews\" class=\"row\">\r\n    <div class=\"col-12 d-flex justify-content-center align-items-center\">\r\n      <star-rating class=\"mb-5\" text-class=\"h1 my-0 font-weight-normal\" :round-start-rating=\"false\"\r\n                   :glow=\"5\" glow-color=\"#ffd055\" :star-size=\"75\" :read-only=\"true\" :rating=\"grade\">\r\n      </star-rating>\r\n    </div>\r\n    <div class=\"row p-0 m-0\">\r\n      <div v-if=\"ownerHasReviews\" class=\"reviews\">\r\n        <div v-for=\"(review, i) in this.sortedReviews\" :key=\"i\" class=\"review p-2 mb-3\" style=\"background-color: #e4f6f8;\">\r\n          <div class=\"review-header\">\r\n            <div class=\"align-items-center\" style=\"display:flex; justify-content: space-between; \">\r\n              <div style=\"display: flex;\">\r\n                <img v-if=\"images[i]\" class=\"profile-pic rounded-pill\" :src=\"images[i]\" alt=\"\"/>\r\n                <img v-else class=\"profile-pic rounded-pill\" src=\"../../../Images/noProfilePic.png\" alt=\"\"/>\r\n                <div class=\"ms-1\">\r\n                  <h6>{{ getAuthorFullName(review) }}</h6>\r\n                  <p class=\"small\" style=\"color: gray;\">{{ formatReviewDate(review.timeStamp) }}</p>\r\n                </div>\r\n              </div>\r\n              <p class=\"h3 pe-2\">{{ review.grade + \"★\" }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"review-body\" style=\"text-align: justify; color: black;\">\r\n            <p v-if=\"review.comment\" class=\"ps-1 pe-2\">{{ review.comment }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"text-center\">\r\n        <label><i>No reviews available.</i></label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StarRating from \"vue-star-rating\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"InstructorProfileReviews\",\r\n  props: [\"reviews\", \"grade\"],\r\n  components: {StarRating},\r\n  data() {\r\n    return {\r\n      images: [],\r\n      sortedReviews: [],\r\n    }\r\n  },\r\n  computed: {\r\n    ownerHasReviews() {\r\n      return this.reviews.length > 0;\r\n    }\r\n  },\r\n  methods: {\r\n    getAuthorFullName(review) {\r\n      return review.author.name + \" \" + review.author.surname;\r\n    },\r\n    formatReviewDate(reviewTime) {\r\n      let date = new Date(reviewTime);\r\n      return date.getDate() + '.' + (date.getMonth() + 1) + '.' +  date.getFullYear() + '. at '\r\n          + date.getHours() + ':' + ( (date.getMinutes()<10?'0':'') + date.getMinutes() );\r\n    },\r\n  },\r\n  mounted() {\r\n    this.sortedReviews = this.reviews;\r\n    this.sortedReviews = this.sortedReviews.sort((a, b) => new Date(b.timeStamp) > new Date(a.timeStamp) ? 1: -1);\r\n    this.images = [];\r\n    for(let i=0; i<this.sortedReviews.length; i++) {\r\n      if(!this.reviews[i].author.photo) { this.images[i] = null; continue; }\r\n      axios.get(\"/Photos/\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        },\r\n        params: {\r\n          path: this.reviews[i].author.photo,\r\n        },\r\n        responseType: \"blob\"\r\n      })\r\n      .then(response => {\r\n        this.images[i] = URL.createObjectURL(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nhr {\r\n  flex-grow: 1;\r\n}\r\n\r\n.review .profile-pic {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  object-position: center;\r\n}\r\n\r\ndiv.review {\r\n  border-radius: 25px;\r\n  border: 1px solid darkgray;\r\n}\r\n\r\ndiv.review:hover {\r\n  border: 3px solid black;\r\n}\r\n\r\ndiv.review {\r\n  background-color: white\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}