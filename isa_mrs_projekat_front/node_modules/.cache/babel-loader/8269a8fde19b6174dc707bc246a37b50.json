{"ast":null,"code":"import { DatePicker } from \"v-calendar\";\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, PointElement, LineController } from 'chart.js';\nimport { useStore } from \"vuex\";\nimport axios from \"axios\";\nimport { toggleLoading } from \"@/components/state\";\nimport store from \"@/store\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, PointElement, LineController);\nexport default {\n  name: \"InstructorBusinessReports\",\n  components: {\n    DatePicker,\n    Line\n  },\n\n  data() {\n    return {\n      incomes: [],\n      range: {\n        start: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\n        end: new Date()\n      },\n      grades: [],\n      chartData1: {\n        labels: [],\n        datasets: [{\n          label: 'Reservations last year',\n          backgroundColor: '#4650dd',\n          borderColor: 'rgb(70, 80, 221, 0.4)',\n          data: []\n        }]\n      },\n      chartData2: {\n        labels: [],\n        datasets: [{\n          label: 'Reservations last month',\n          backgroundColor: '#4650dd',\n          borderColor: 'rgb(70, 80, 221, 0.4)',\n          data: []\n        }]\n      },\n      chartData3: {\n        labels: [],\n        datasets: [{\n          label: 'Reservations last week',\n          backgroundColor: '#4650dd',\n          borderColor: 'rgb(70, 80, 221, 0.4)',\n          data: []\n        }]\n      }\n    };\n  },\n\n  mounted() {\n    toggleLoading();\n    const store = useStore();\n    axios.get(\"/Profits/instructorDashboard\", {\n      headers: {\n        Authorization: \"Bearer \" + store.getters.access_token\n      }\n    }).then(response => {\n      const dashboardData = response.data;\n      this.grades = dashboardData.rentalGrades;\n      const nodes1 = dashboardData.yearlyGraph.nodes;\n      const nodes2 = dashboardData.monthlyGraph.nodes;\n      const nodes3 = dashboardData.weeklyGraph.nodes;\n      let dataset1 = [];\n      let dataset2 = [];\n      let dataset3 = [];\n\n      for (let i = 0; i < nodes1.length; i++) {\n        this.chartData1.labels.push(nodes1[i].month);\n        dataset1.push(nodes1[i].value);\n      }\n\n      for (let i = 0; i < nodes2.length; i++) {\n        this.chartData2.labels.push(nodes2[i].month);\n        dataset2.push(nodes2[i].value);\n      }\n\n      for (let i = 0; i < nodes3.length; i++) {\n        this.chartData3.labels.push(nodes3[i].month);\n        dataset3.push(nodes3[i].value);\n      }\n\n      this.chartData1.datasets[0].data = dataset1;\n      this.chartData2.datasets[0].data = dataset2;\n      this.chartData3.datasets[0].data = dataset3;\n      this.generateReport();\n      toggleLoading();\n    }).catch(e => {\n      console.log(e);\n      this.$notify({\n        title: \"Server error\",\n        text: \"Server is currently off. Please try again later...\",\n        type: \"error\"\n      });\n      toggleLoading();\n    });\n  },\n\n  methods: {\n    generateReport() {\n      toggleLoading();\n      const start = this.range.start.toISOString().slice(0, 19);\n      const end = this.range.end.toISOString().slice(0, 19);\n      axios.get(\"/Profits/instructorReport\", {\n        headers: {\n          Authorization: \"Bearer \" + store.getters.access_token\n        },\n        params: {\n          start: start,\n          end: end\n        }\n      }).then(response => {\n        this.incomes = response.data;\n        toggleLoading();\n      }).catch(() => {\n        this.$notify({\n          title: \"Server error\",\n          text: \"Server is currently off. Please try again later...\",\n          type: \"error\"\n        });\n        toggleLoading();\n      });\n    }\n\n  },\n  computed: {\n    averageGrade() {\n      let gradeTotal = 0;\n      let count = 0;\n      this.grades.forEach(grade => {\n        if (grade !== \"0\") {\n          count += 1;\n          gradeTotal += parseFloat(grade.grade);\n        }\n      });\n      return count === 0 ? count : gradeTotal / count;\n    },\n\n    totalIncome() {\n      let income = 0;\n      this.incomes.forEach(i => {\n        income += i.value;\n      });\n      return income;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["DatePicker","Line","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","LineElement","PointElement","LineController","useStore","axios","toggleLoading","store","register","name","components","data","incomes","range","start","Date","setFullYear","getFullYear","end","grades","chartData1","labels","datasets","label","backgroundColor","borderColor","chartData2","chartData3","mounted","get","headers","Authorization","getters","access_token","then","response","dashboardData","rentalGrades","nodes1","yearlyGraph","nodes","nodes2","monthlyGraph","nodes3","weeklyGraph","dataset1","dataset2","dataset3","i","length","push","month","value","generateReport","catch","e","console","log","$notify","title","text","type","methods","toISOString","slice","params","computed","averageGrade","gradeTotal","count","forEach","grade","parseFloat","totalIncome","income"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\FishingInstructor\\FishingInstructorPage\\components\\InstructorMainViews\\InstructorBusinessReports.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-10\">\r\n      <div class=\"row justify-content-between mt-5\">\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th class=\"text-end pe-5\">Grade</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(grade, index) in this.grades\" :key=\"index\" :class=\"index%2!==0?'odd':'even'\">\r\n            <td>{{grade.rentalObject.id}}</td>\r\n            <td>{{grade.rentalObject.name}}</td>\r\n            <td class=\"text-end pe-5\">{{grade.grade===\"0\"?\"/\":grade.grade}}</td>\r\n          </tr>\r\n          <tr style=\"background-color: #6c757d; color: white\">\r\n            <td class=\"fw-bolder text-start\">Average:</td>\r\n            <td colspan=\"3\" class=\"fw-bolder text-end pe-5\">{{averageGrade.toFixed(1)}}</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"container d-flex justify-content-center p-3 rounded shadow mt-5 mb-5\">\r\n          <Line :chart-data=\"chartData1\" :key=\"chartData1.datasets[0].data\"></Line>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"container d-flex justify-content-center p-3 rounded shadow mt-5 mb-5\">\r\n          <Line :chart-data=\"chartData2\" :key=\"chartData2.datasets[0].data\"></Line>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"container d-flex justify-content-center p-3 rounded shadow mt-5 mb-5\">\r\n          <Line :chart-data=\"chartData3\" :key=\"chartData3.datasets[0].data\"></Line>\r\n        </div>\r\n      </div>\r\n      <div class=\"row container-fluid pe-0 ps-0 me-0 ms-0 mb-5 mt-5\">\r\n        <div class=\"col-4 text-center\">\r\n          <date-picker mode=\"range\" v-model=\"range\" is-range></date-picker>\r\n          <button class=\"btn mt-2\" @click=\"generateReport\">Generate Report</button>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"align-items-center\">\r\n            <div class=\"row main-col text-center header rounded mb-3\">\r\n              <table>\r\n                <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Type</th>\r\n                  <th>Time Stamp</th>\r\n                  <th class=\"text-end pe-5\">Value</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr v-for=\"(income, index) in this.incomes\" :key=\"index\" :class=\"index%2!==0?'odd':'even'\">\r\n                  <td>{{income.id}}</td>\r\n                  <td>{{income.type}}</td>\r\n                  <td>{{income.timeStamp.replace('T', ' ')}}</td>\r\n                  <td class=\"text-end pe-5\">{{income.value}}$</td>\r\n                </tr>\r\n                <tr style=\"background-color: #6c757d; color: white\">\r\n                  <td class=\"fw-bolder text-start\">Total:</td>\r\n                  <td colspan=\"3\" class=\"fw-bolder text-end pe-5\">{{totalIncome.toFixed(1)}}$</td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {DatePicker} from \"v-calendar\";\r\nimport { Line } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, PointElement, LineController } from 'chart.js';\r\nimport {useStore} from \"vuex\";\r\nimport axios from \"axios\";\r\nimport {toggleLoading} from \"@/components/state\";\r\nimport store from \"@/store\";\r\n\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, LineElement, PointElement, LineController)\r\n\r\nexport default {\r\n  name: \"InstructorBusinessReports\",\r\n  components: {DatePicker, Line},\r\n  data() {\r\n    return {\r\n      incomes: [],\r\n      range: {\r\n        start: new Date(new Date().setFullYear(new Date().getFullYear() - 1)),\r\n        end: new Date()\r\n      },\r\n      grades: [],\r\n      chartData1: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Reservations last year',\r\n            backgroundColor: '#4650dd',\r\n            borderColor: 'rgb(70, 80, 221, 0.4)',\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      chartData2: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Reservations last month',\r\n            backgroundColor: '#4650dd',\r\n            borderColor: 'rgb(70, 80, 221, 0.4)',\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      chartData3: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Reservations last week',\r\n            backgroundColor: '#4650dd',\r\n            borderColor: 'rgb(70, 80, 221, 0.4)',\r\n            data: []\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    toggleLoading();\r\n    const store = useStore();\r\n    axios.get(\"/Profits/instructorDashboard\", {headers: {\r\n        Authorization: \"Bearer \" + store.getters.access_token,\r\n      }\r\n    })\r\n    .then((response) => {\r\n      const dashboardData = response.data;\r\n      this.grades = dashboardData.rentalGrades;\r\n      const nodes1 = dashboardData.yearlyGraph.nodes;\r\n      const nodes2 = dashboardData.monthlyGraph.nodes;\r\n      const nodes3 = dashboardData.weeklyGraph.nodes;\r\n      let dataset1 = [];\r\n      let dataset2 = [];\r\n      let dataset3 = [];\r\n      for (let i = 0; i < nodes1.length; i++) {\r\n        this.chartData1.labels.push(nodes1[i].month);\r\n        dataset1.push(nodes1[i].value);\r\n      }\r\n      for (let i = 0; i < nodes2.length; i++) {\r\n        this.chartData2.labels.push(nodes2[i].month);\r\n        dataset2.push(nodes2[i].value);\r\n      }\r\n      for (let i = 0; i < nodes3.length; i++) {\r\n        this.chartData3.labels.push(nodes3[i].month);\r\n        dataset3.push(nodes3[i].value);\r\n      }\r\n      this.chartData1.datasets[0].data = dataset1;\r\n      this.chartData2.datasets[0].data = dataset2;\r\n      this.chartData3.datasets[0].data = dataset3;\r\n      this.generateReport();\r\n      toggleLoading();\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n      this.$notify({\r\n        title: \"Server error\",\r\n        text: \"Server is currently off. Please try again later...\",\r\n        type: \"error\"\r\n      });\r\n      toggleLoading();\r\n    })\r\n  },\r\n  methods: {\r\n    generateReport() {\r\n      toggleLoading();\r\n      const start = this.range.start.toISOString().slice(0, 19);\r\n      const end = this.range.end.toISOString().slice(0, 19);\r\n      axios.get(\"/Profits/instructorReport\", {headers: {\r\n          Authorization: \"Bearer \" + store.getters.access_token,\r\n        },\r\n        params: {\r\n          start: start,\r\n          end: end\r\n        }\r\n      })\r\n          .then((response) => {\r\n            this.incomes = response.data;\r\n            toggleLoading();\r\n          })\r\n          .catch(() => {\r\n            this.$notify({\r\n              title: \"Server error\",\r\n              text: \"Server is currently off. Please try again later...\",\r\n              type: \"error\"\r\n            });\r\n            toggleLoading();\r\n          });\r\n    }\r\n  },\r\n  computed: {\r\n    averageGrade() {\r\n      let gradeTotal = 0;\r\n      let count = 0;\r\n      this.grades.forEach(grade => {\r\n        if (grade !== \"0\") {\r\n          count += 1;\r\n          gradeTotal += parseFloat(grade.grade);\r\n        }\r\n      })\r\n      return count===0?count:gradeTotal/count;\r\n    },\r\n    totalIncome() {\r\n      let income = 0;\r\n      this.incomes.forEach(i => {\r\n        income += i.value;\r\n      })\r\n      return income;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n p {\r\n   color: ;\r\n }\r\n</style>"]},"metadata":{},"sourceType":"module"}