{"ast":null,"code":"import { DatePicker } from \"v-calendar\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nexport default {\n  name: \"ReservationCreationPage\",\n  components: {\n    DatePicker\n  },\n\n  data() {\n    return {\n      date: new Date(),\n      excluded: [],\n      clients: [],\n      client: null,\n      dateIsSelected: true,\n      clientIsSelected: true,\n      isEquipmentNeeded: false\n    };\n  },\n\n  mounted() {\n    axios.get(\"/Reservations/instructorReservationLimits\", {\n      headers: {\n        Authorization: \"Bearer \" + store.getters.access_token\n      },\n      params: {\n        id: this.$route.params.id\n      }\n    }).then(response => {\n      const dto = response.data;\n      this.excluded.push({\n        start: new Date(dto.ownerInitDate),\n        end: new Date(dto.ownerTermDate)\n      });\n      this.excluded.push({\n        start: null,\n        end: new Date()\n      });\n      this.excluded.push({\n        start: new Date(dto.rentalTermDate),\n        end: null\n      });\n\n      for (let i = 0; i < dto.reservationsPeriods.length; i++) {\n        this.excluded.push({\n          start: new Date(dto.reservationsPeriods[i].start),\n          end: new Date(dto.reservationsPeriods[i].end)\n        });\n      }\n\n      console.log(dto);\n      response.data.clients.forEach(client => {\n        this.clients.push(client);\n      });\n      console.log(this.clients);\n    }).catch();\n  },\n\n  methods: {\n    isDataEntered() {\n      if (this.date === null) {\n        this.dateIsSelected = false;\n        return false;\n      }\n\n      this.dateIsSelected = true;\n\n      if (this.client === null) {\n        this.clientIsSelected = false;\n        return false;\n      }\n\n      this.clientIsSelected = true;\n      return true;\n    },\n\n    book() {\n      if (this.isDataEntered()) {\n        console.log(this.date);\n        const dto = {\n          clientId: this.client.id,\n          rentalId: this.$route.params.id,\n          initDate: this.date,\n          isEquipmentNeeded: this.isEquipmentNeeded\n        };\n        axios.post(\"/Reservations/bookForClient\", dto, {\n          headers: {\n            Authorization: \"Bearer \" + store.getters.access_token\n          }\n        }).then(() => {\n          this.$notify({\n            title: \"Successful reservation\",\n            text: \"You have successfully booked adventure for client.\",\n            position: \"bottom right\",\n            type: \"success\"\n          });\n        }).catch(() => {\n          this.$notify({\n            title: \"Server error\",\n            text: \"Server is currently off. Please try again later...\",\n            type: \"error\"\n          });\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["DatePicker","axios","store","name","components","data","date","Date","excluded","clients","client","dateIsSelected","clientIsSelected","isEquipmentNeeded","mounted","get","headers","Authorization","getters","access_token","params","id","$route","then","response","dto","push","start","ownerInitDate","end","ownerTermDate","rentalTermDate","i","reservationsPeriods","length","console","log","forEach","catch","methods","isDataEntered","book","clientId","rentalId","initDate","post","$notify","title","text","position","type"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\FishingInstructor\\FishingInstructorPage\\components\\InstructorMainViews\\ReservationCreationPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-8 pt-5 mb-5\">\r\n      <div class=\"container px-4 py-3 rounded form\" spellcheck=\"false\" >\r\n        <div class=\"container-fluid\">\r\n          <h3>Reservation</h3>\r\n          <div class=\"row main justify-content-center\">\r\n            <div class=\"row main\">\r\n              <div class=\"col-3\"></div>\r\n              <div class=\"col-6\">\r\n\r\n                <div class=\"row justify-content-center mt-4\">\r\n                  <label class=\"ms-3\">Date</label>\r\n                  <div class=\"container p-0 m-0 text-center\" style=\"max-width: 400px\">\r\n                    <date-picker :disabled-dates=\"excluded\" v-model=\"date\" mode=\"dateTime\" is24hr :firstDayOfWeek=2>\r\n                    </date-picker>\r\n                    <p v-if='!dateIsSelected'>'Date' is a mandatory field.</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center mt-2\">\r\n                  <label for=\"client\">Client</label>\r\n                  <div class=\"container p-0 m-0 text-center\" style=\"max-width: 400px\">\r\n                    <select class=\"form-control\" v-model=\"client\" id=\"client\">\r\n                      <option :value=\"clients[client]\" v-for=\"(index, client) in clients\" :key=\"index\">{{clients[client].name + \" \" + clients[client].surname}}</option>\r\n                    </select>\r\n                    <p v-if='!clientIsSelected'>'Client' is a mandatory field.</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center mt-2\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"equipment\" v-model=\"isEquipmentNeeded\">\r\n                  <label for=\"equipment\">Is Equipment needed?</label>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"col-3\"></div>\r\n              <div class=\"d-flex pt-3 justify-content-center\">\r\n                <router-link to=\"/fishingInstructor/adventures\" class=\"btn btn-red mt-3 me-1\">Cancel</router-link>\r\n                <button type=\"button\" class=\"btn mt-3\" @click.prevent=\"book\">Submit</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {DatePicker} from \"v-calendar\";\r\nimport axios from \"axios\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"ReservationCreationPage\",\r\n  components: {DatePicker},\r\n  data() {\r\n   return {\r\n     date: new Date(),\r\n     excluded: [],\r\n     clients: [],\r\n     client: null,\r\n     dateIsSelected: true,\r\n     clientIsSelected: true,\r\n     isEquipmentNeeded: false\r\n   }\r\n  },\r\n  mounted() {\r\n    axios.get(\"/Reservations/instructorReservationLimits\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + store.getters.access_token,\r\n      },\r\n      params: {\r\n        id: this.$route.params.id\r\n      }\r\n    })\r\n    .then((response) => {\r\n      const dto = response.data;\r\n      this.excluded.push({start:new Date(dto.ownerInitDate), end:new Date(dto.ownerTermDate)});\r\n      this.excluded.push({start:null, end:new Date()});\r\n      this.excluded.push({start:new Date(dto.rentalTermDate), end:null});\r\n      for (let i = 0; i < dto.reservationsPeriods.length; i++) {\r\n        this.excluded.push({start:new Date(dto.reservationsPeriods[i].start), end:new Date(dto.reservationsPeriods[i].end)})\r\n      }\r\n      console.log(dto);\r\n      response.data.clients.forEach(client => {\r\n        this.clients.push(client);\r\n      });\r\n      console.log(this.clients)\r\n    })\r\n    .catch()\r\n  },\r\n  methods: {\r\n    isDataEntered() {\r\n      if (this.date === null) {\r\n        this.dateIsSelected = false;\r\n        return false;\r\n      }\r\n      this.dateIsSelected = true\r\n      if (this.client === null) {\r\n        this.clientIsSelected = false;\r\n        return false;\r\n      }\r\n      this.clientIsSelected = true;\r\n      return true;\r\n    },\r\n    book() {\r\n      if (this.isDataEntered()) {\r\n        console.log(this.date);\r\n        const dto = {clientId: this.client.id, rentalId: this.$route.params.id, initDate: this.date, isEquipmentNeeded: this.isEquipmentNeeded};\r\n        axios.post(\"/Reservations/bookForClient\", dto, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + store.getters.access_token,\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.$notify( {\r\n            title: \"Successful reservation\",\r\n            text: \"You have successfully booked adventure for client.\",\r\n            position: \"bottom right\",\r\n            type: \"success\"\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$notify({\r\n            title: \"Server error\",\r\n            text: \"Server is currently off. Please try again later...\",\r\n            type: \"error\"\r\n          });\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nlabel, small {\r\n  max-width: 400px;\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n}\r\n\r\np {\r\n  color: #e23c52;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}