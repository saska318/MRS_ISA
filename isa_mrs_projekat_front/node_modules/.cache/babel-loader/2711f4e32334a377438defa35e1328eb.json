{"ast":null,"code":"import { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faMinus, faPlus, faPlusCircle, faX, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { DatePicker } from \"v-calendar\";\nimport axios from \"axios\";\nimport { toggleLoading, toggleProcessing } from \"@/components/state\";\nimport store from \"@/store\";\nlibrary.add(faPlus, faMinus, faX, faPlusCircle, faArrowRight);\nexport default {\n  name: \"AdventureCreationPage\",\n  components: {\n    FontAwesomeIcon,\n    DatePicker\n  },\n\n  data() {\n    return {\n      adventure: {\n        id: null,\n        name: null,\n        description: null,\n        capacity: null,\n        price: null,\n        duration: 0,\n        additionalServices: [],\n        conductRules: [],\n        cancellationFee: null,\n        address: {\n          country: null,\n          city: null,\n          street: null,\n          number: null,\n          longitude: null,\n          latitude: null\n        },\n        adventureEquipment: [],\n        initDate: null,\n        termDate: null\n      },\n      photo: null,\n      range: {\n        start: null,\n        end: null\n      },\n      primaryPhotos: [],\n      date: null,\n      photos: [],\n      imageUrls: [],\n      equipmentPiece: {\n        name: \"\"\n      },\n      additionalService: \"\",\n      additionalServicePrice: null,\n      ruleType: \"Do\",\n      ruleText: \"\",\n      hours: 0,\n      minutes: 0,\n      ruleIsValid: true,\n      ruleAlreadyExists: false,\n      serviceAlreadyExists: false,\n      equipmentAlreadyExists: false,\n      nameIsEntered: true,\n      durationIsEntered: true,\n      descriptionIsEntered: true,\n      countryIsEntered: true,\n      cityIsEntered: true,\n      streetIsEntered: true,\n      numberIsEntered: true,\n      priceIsEntered: true,\n      capacityIsEntered: true,\n      cancellationFeeIsEntered: true,\n      photoIsEntered: true,\n      addressIsValid: true\n    };\n  },\n\n  mounted() {\n    toggleLoading();\n\n    if (this.$route.params.id !== undefined) {\n      axios.get(\"/RentalObjects/getAdventureInstructor\", {\n        headers: {\n          Authorization: \"Bearer \" + store.getters.access_token\n        },\n        params: {\n          id: this.$route.params.id\n        }\n      }).then(response => {\n        let adventure = response.data;\n        this.adventure.name = adventure.name;\n        this.adventure.description = adventure.description;\n        this.hours = Math.trunc(adventure.duration);\n        this.minutes = 60 * (adventure.duration % 1);\n        this.adventure.address = adventure.address;\n        this.adventure.price = adventure.price;\n        this.adventure.capacity = adventure.capacity;\n        this.adventure.adventureEquipment = adventure.adventureEquipment;\n        this.adventure.additionalServices = adventure.additionalServices;\n        this.adventure.conductRules = adventure.conductRules;\n        this.adventure.cancellationFee = adventure.cancellationFee;\n\n        if (adventure.initDate != null && adventure.termDate != null) {\n          this.adventure.initDate = new Date(adventure.initDate);\n          this.adventure.termDate = new Date(adventure.termDate);\n          this.range.start = this.adventure.initDate;\n          this.range.end = this.adventure.termDate;\n        }\n\n        adventure.photos.forEach(photo => {\n          this.photos.push(photo.photo);\n          this.primaryPhotos.push(photo.photo);\n          this.loadImage(photo.photo, this.photos.indexOf(photo.photo));\n        });\n        this.adventure.id = adventure.id;\n        toggleLoading();\n      }).catch(() => {\n        this.$notify({\n          title: \"Server error\",\n          text: \"Server is currently off. Please try again later...\",\n          type: \"error\"\n        });\n        toggleLoading();\n      });\n    } else {\n      toggleLoading();\n    }\n  },\n\n  computed: {\n    rulesOfConduct() {\n      let pairsOfRules = [];\n      let positiveRules = this.positiveRules(this.adventure.conductRules);\n      let negativeRules = this.negativeRules(this.adventure.conductRules);\n      let size = Math.max(positiveRules.length, negativeRules.length);\n\n      for (let i = 0; i < size; i++) {\n        pairsOfRules.push({\n          \"Do\": i + 1 <= positiveRules.length ? positiveRules[i] : \"\",\n          \"DoNot\": i + 1 <= negativeRules.length ? negativeRules[i] : \"\"\n        });\n      }\n\n      return pairsOfRules;\n    },\n\n    isNameEntered() {\n      return Boolean(this.adventure.name);\n    },\n\n    isDescriptionEntered() {\n      return Boolean(this.adventure.description);\n    },\n\n    isDurationEntered() {\n      return this.adventure.duration > 0;\n    },\n\n    isCountryEntered() {\n      return Boolean(this.adventure.address.country);\n    },\n\n    isCityEntered() {\n      return Boolean(this.adventure.address.city);\n    },\n\n    isStreetEntered() {\n      return Boolean(this.adventure.address.street);\n    },\n\n    isNumberEntered() {\n      return Boolean(this.adventure.address.number);\n    },\n\n    isPriceEntered() {\n      return Boolean(this.adventure.price);\n    },\n\n    isCapacityEntered() {\n      return Boolean(this.adventure.capacity);\n    },\n\n    isCancellationFeeEntered() {\n      return Boolean(this.adventure.cancellationFee);\n    },\n\n    isPhotoEntered() {\n      return this.photos.length > 0;\n    }\n\n  },\n  methods: {\n    submit() {\n      this.adventure.duration = this.minutes / 60 + this.hours;\n\n      if (this.isDataEntered()) {\n        this.isDataCorrect();\n      }\n    },\n\n    createAdventure() {\n      let adventure = this.adventure;\n      this.range.start.setTime(this.range.start.getTime() + 2 * 60 * 60 * 1000);\n      this.range.end.setTime(this.range.end.getTime() + 2 * 60 * 60 * 1000);\n      adventure.initDate = this.range.start;\n      adventure.termDate = this.range.end;\n      axios.post(\"/RentalObjects/addAdventure\", adventure, {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        }\n      }).then(adventure => {\n        for (let i = 0; i < this.photos.length; i++) {\n          let formData = new FormData();\n          formData.append(\"file\", this.photos[i]);\n          axios.post(\"/Photos/upload\", formData, {\n            headers: {\n              Authorization: \"Bearer \" + this.$store.getters.access_token,\n              \"Content-type\": \"multipart/form-data\"\n            }\n          }).then(response => {\n            let body = {\n              id: adventure.data.id,\n              photos: [response.data]\n            };\n            axios.post(\"/RentalObjects/connectPhotosToRental\", body, {\n              headers: {\n                Authorization: \"Bearer \" + this.$store.getters.access_token\n              }\n            }).then(() => {\n              this.$notify({\n                title: \"Successful adding\",\n                text: \"You have successfully added a new adventure.\",\n                position: \"bottom right\",\n                type: \"success\"\n              });\n            });\n          });\n        }\n\n        toggleProcessing();\n      }).catch(error => {\n        if (!error.response) {\n          this.$notify({\n            title: \"Server error\",\n            text: \"Server is currently off. Please try again later...\",\n            type: \"error\"\n          });\n        } else if (error.response.status === 500) {\n          this.$notify({\n            title: \"Internal Server Error\",\n            text: \"Something went wrong on the server! Please try again later...\",\n            position: \"bottom right\",\n            type: \"error\"\n          });\n        }\n\n        toggleProcessing();\n      });\n    },\n\n    updateAdventure() {\n      let adventure = this.adventure;\n      this.range.start.setTime(this.range.start.getTime() + 2 * 60 * 60 * 1000);\n      this.range.end.setTime(this.range.end.getTime() + 2 * 60 * 60 * 1000);\n      adventure.initDate = this.range.start;\n      adventure.termDate = this.range.end;\n      axios.put(\"/RentalObjects/updateAdventure\", adventure, {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        }\n      }).then(id => {\n        for (let i = 0; i < this.photos.length; i++) {\n          if (!this.photoExisted(this.photos[i])) {\n            let formData = new FormData();\n            formData.append(\"file\", this.photos[i]);\n            axios.post(\"/Photos/upload\", formData, {\n              headers: {\n                Authorization: \"Bearer \" + this.$store.getters.access_token,\n                \"Content-type\": \"multipart/form-data\"\n              }\n            }).then(response => {\n              let body = {\n                id: id.data,\n                photos: [response.data]\n              };\n              axios.post(\"/RentalObjects/connectPhotosToRental\", body, {\n                headers: {\n                  Authorization: \"Bearer \" + this.$store.getters.access_token\n                }\n              }).then(() => {\n                this.$notify({\n                  title: \"Successful update\",\n                  text: \"You have successfully updated the adventure.\",\n                  position: \"bottom right\",\n                  type: \"success\"\n                });\n              });\n            });\n          }\n        }\n\n        toggleProcessing();\n      }).catch(error => {\n        if (!error.response) {\n          this.$notify({\n            title: \"Server error\",\n            text: \"Server is currently off. Please try again later...\",\n            type: \"error\"\n          });\n        } else if (error.response.status === 500) {\n          this.$notify({\n            title: \"Internal Server Error\",\n            text: \"Something went wrong on the server! Please try again later...\",\n            position: \"bottom right\",\n            type: \"error\"\n          });\n        }\n\n        toggleProcessing();\n      });\n    },\n\n    isDataEntered() {\n      if (!this.isNameEntered) {\n        this.nameIsEntered = false;\n        return false;\n      }\n\n      if (!this.isDescriptionEntered) {\n        this.descriptionIsEntered = false;\n        return false;\n      }\n\n      if (!this.isDurationEntered) {\n        this.durationIsEntered = false;\n        return false;\n      }\n\n      if (!this.isCountryEntered) {\n        this.countryIsEntered = false;\n        return false;\n      }\n\n      if (!this.isCityEntered) {\n        this.cityIsEntered = false;\n        return false;\n      }\n\n      if (!this.isStreetEntered) {\n        this.streetIsEntered = false;\n        return false;\n      }\n\n      if (!this.isNumberEntered) {\n        this.numberIsEntered = false;\n        return false;\n      }\n\n      if (!this.isPriceEntered) {\n        this.priceIsEntered = false;\n        return false;\n      }\n\n      if (!this.isCapacityEntered) {\n        this.capacityIsEntered = false;\n        return false;\n      }\n\n      if (!this.isCancellationFeeEntered) {\n        this.cancellationFeeIsEntered = false;\n        return false;\n      }\n\n      if (!this.isPhotoEntered) {\n        this.photoIsEntered = false;\n        return false;\n      }\n\n      return true;\n    },\n\n    async isDataCorrect() {\n      this.addressIsValid = false;\n      this.validateAddress();\n    },\n\n    loadImage(name, index) {\n      axios.get(\"/Photos/\", {\n        headers: {\n          Authorization: \"Bearer \" + this.$store.getters.access_token\n        },\n        params: {\n          path: name\n        },\n        responseType: \"blob\"\n      }).then(response => {\n        this.imageUrls[index] = URL.createObjectURL(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    validateAddress() {\n      toggleProcessing();\n      const apiKey = 'VrDrl5BjEA0Whvb-chHbFz96HV4qlCXB-yoiTRRLKno';\n      const url = 'https://geocoder.ls.hereapi.com/6.2/geocode.json' + '?apiKey=' + apiKey + '&housenumber=' + this.adventure.address.number + '&street=' + this.adventure.address.street + '&city=' + this.adventure.address.city + '&country=' + this.adventure.address.country;\n      fetch(url).then(response => response.json()).then(data => {\n        const responseView = data.Response.View;\n\n        if (responseView.length === 0) {\n          this.addressIsValid = false;\n        } else {\n          const location = responseView[0].Result[0].Location.DisplayPosition;\n          const address = responseView[0].Result[0].Location.Address;\n          this.adventure.address.city = this.transliterate(address.City);\n          this.adventure.address.country = this.transliterate(address.AdditionalData[0].value);\n          this.adventure.address.street = this.transliterate(address.Street);\n          this.adventure.address.longitude = location.Longitude;\n          this.adventure.address.latitude = location.Latitude;\n          this.addressIsValid = true;\n\n          if (this.adventure.id === null) {\n            this.createAdventure();\n          } else {\n            this.updateAdventure();\n          }\n        }\n      }).catch(() => {\n        this.addressIsValid = false;\n        toggleProcessing();\n      });\n    },\n\n    transliterate(word) {\n      let letters = {\n        \"Б\": \"B\",\n        \"В\": \"V\",\n        \"Г\": \"G\",\n        \"Д\": \"D\",\n        \"Ђ\": \"Đ\",\n        \"Ж\": \"Ž\",\n        \"З\": \"Z\",\n        \"И\": \"I\",\n        \"К\": \"K\",\n        \"Л\": \"L\",\n        \"Љ\": \"Lj\",\n        \"М\": \"M\",\n        \"Н\": \"N\",\n        \"Њ\": \"Nj\",\n        \"П\": \"P\",\n        \"Р\": \"R\",\n        \"С\": \"S\",\n        \"Ћ\": \"Ć\",\n        \"У\": \"U\",\n        \"Ф\": \"F\",\n        \"Х\": \"H\",\n        \"Ц\": \"C\",\n        \"Ч\": \"Č\",\n        \"Џ\": \"Dž\",\n        \"Ш\": \"Š\",\n        \"б\": \"b\",\n        \"в\": \"v\",\n        \"г\": \"g\",\n        \"д\": \"d\",\n        \"ђ\": \"đ\",\n        \"ж\": \"ž\",\n        \"з\": \"z\",\n        \"и\": \"i\",\n        \"к\": \"k\",\n        \"л\": \"l\",\n        \"љ\": \"lj\",\n        \"м\": \"m\",\n        \"н\": \"n\",\n        \"њ\": \"nj\",\n        \"п\": \"p\",\n        \"р\": \"r\",\n        \"с\": \"s\",\n        \"т\": \"t\",\n        \"ћ\": \"ć\",\n        \"у\": \"u\",\n        \"ф\": \"f\",\n        \"х\": \"h\",\n        \"ц\": \"c\",\n        \"ч\": \"č\",\n        \"џ\": \"dž\",\n        \"ш\": \"š\"\n      };\n      return word.split('').map(function (char) {\n        return letters[char] || char;\n      }).join(\"\");\n    },\n\n    addPhoto(e) {\n      e.target.files.forEach(photo => {\n        this.photos.push(photo);\n        this.imageUrls.push(URL.createObjectURL(photo));\n        this.photoIsEntered = true;\n      });\n    },\n\n    removePhoto(index) {\n      this.photos.splice(index, 1);\n      this.imageUrls.splice(index, 1);\n    },\n\n    addEquipment() {\n      if (this.equipmentPiece.name.trim() !== \"\") {\n        if (this.adventure.adventureEquipment.indexOf(this.equipmentPiece.name.trim()) === -1) {\n          this.adventure.adventureEquipment.push(this.equipmentPiece);\n          this.equipmentPiece = {\n            name: \"\"\n          };\n          this.equipmentAlreadyExists = false;\n        } else {\n          this.equipmentAlreadyExists = true;\n        }\n      }\n    },\n\n    removeEquipment(equipmentName) {\n      this.adventure.adventureEquipment.splice(this.adventure.adventureEquipment.indexOf(equipmentName), 1);\n    },\n\n    addService() {\n      if (this.additionalService.trim() !== \"\") {\n        let newService = {};\n        newService[\"name\"] = this.additionalService.trim();\n        newService[\"price\"] = this.additionalServicePrice === null ? 0 : this.additionalServicePrice;\n\n        if (this.adventure.additionalServices.indexOf(newService) === -1) {\n          this.adventure.additionalServices.push(newService);\n          this.additionalService = \"\";\n          this.additionalServicePrice = null;\n          this.serviceAlreadyExists = false;\n        } else {\n          this.serviceAlreadyExists = true;\n        }\n      }\n    },\n\n    removeService(service) {\n      this.adventure.additionalServices.splice(this.adventure.additionalServices.indexOf(service), 1);\n    },\n\n    addRule() {\n      if (this.ruleText.trim() !== \"\" && this.ruleType.trim() !== \"\") {\n        if (!this.ruleExists(this.ruleText.trim())) {\n          let newRule = {};\n          newRule[\"type\"] = this.ruleType;\n          newRule[\"rule\"] = this.ruleText;\n          this.adventure.conductRules.push(newRule);\n          this.ruleType = \"\";\n          this.ruleText = \"\";\n          this.ruleIsValid = true;\n          this.ruleAlreadyExists = false;\n        } else {\n          this.ruleAlreadyExists = true;\n        }\n      } else {\n        this.ruleIsValid = false;\n      }\n    },\n\n    removeRule(rule) {\n      this.adventure.conductRules.splice(this.getRuleIndex(rule), 1);\n    },\n\n    getRuleIndex(rule) {\n      let index = -1;\n      this.adventure.conductRules.forEach(conductRule => {\n        if (conductRule.rule === rule) {\n          index = this.adventure.conductRules.indexOf(conductRule);\n        }\n      });\n      return index;\n    },\n\n    positiveRules(rulesOfConduct) {\n      let positiveRules = [];\n      rulesOfConduct.forEach(rule => {\n        if (rule.type === \"Do\") {\n          positiveRules.push(rule.rule);\n        }\n      });\n      return positiveRules;\n    },\n\n    negativeRules(rulesOfConduct) {\n      let negativeRules = [];\n      rulesOfConduct.forEach(rule => {\n        if (rule.type === \"DoNot\") {\n          negativeRules.push(rule.rule);\n        }\n      });\n      return negativeRules;\n    },\n\n    ruleExists(rule) {\n      return this.getRuleIndex(rule) !== -1;\n    },\n\n    photoExisted(photo) {\n      for (let i = 0; i < this.primaryPhotos.length; i++) {\n        if (this.primaryPhotos[i] === photo) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["FontAwesomeIcon","library","faMinus","faPlus","faPlusCircle","faX","faArrowRight","DatePicker","axios","toggleLoading","toggleProcessing","store","add","name","components","data","adventure","id","description","capacity","price","duration","additionalServices","conductRules","cancellationFee","address","country","city","street","number","longitude","latitude","adventureEquipment","initDate","termDate","photo","range","start","end","primaryPhotos","date","photos","imageUrls","equipmentPiece","additionalService","additionalServicePrice","ruleType","ruleText","hours","minutes","ruleIsValid","ruleAlreadyExists","serviceAlreadyExists","equipmentAlreadyExists","nameIsEntered","durationIsEntered","descriptionIsEntered","countryIsEntered","cityIsEntered","streetIsEntered","numberIsEntered","priceIsEntered","capacityIsEntered","cancellationFeeIsEntered","photoIsEntered","addressIsValid","mounted","$route","params","undefined","get","headers","Authorization","getters","access_token","then","response","Math","trunc","Date","forEach","push","loadImage","indexOf","catch","$notify","title","text","type","computed","rulesOfConduct","pairsOfRules","positiveRules","negativeRules","size","max","length","i","isNameEntered","Boolean","isDescriptionEntered","isDurationEntered","isCountryEntered","isCityEntered","isStreetEntered","isNumberEntered","isPriceEntered","isCapacityEntered","isCancellationFeeEntered","isPhotoEntered","methods","submit","isDataEntered","isDataCorrect","createAdventure","setTime","getTime","post","$store","formData","FormData","append","body","position","error","status","updateAdventure","put","photoExisted","validateAddress","index","path","responseType","URL","createObjectURL","console","log","apiKey","url","fetch","json","responseView","Response","View","location","Result","Location","DisplayPosition","Address","transliterate","City","AdditionalData","value","Street","Longitude","Latitude","word","letters","split","map","char","join","addPhoto","e","target","files","removePhoto","splice","addEquipment","trim","removeEquipment","equipmentName","addService","newService","removeService","service","addRule","ruleExists","newRule","removeRule","rule","getRuleIndex","conductRule"],"sourceRoot":"","sources":["C:\\Users\\Saška\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\FishingInstructor\\FishingInstructorPage\\components\\InstructorMainViews\\AdventureCreationPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\" :key=\"adventure.id\">\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-8 pt-5 mb-5\">\r\n      <div class=\"container px-4 py-3 rounded form\" spellcheck=\"false\" >\r\n        <div class=\"container-fluid\">\r\n          <h3 v-if=\"adventure.id === null\">New Adventure</h3>\r\n          <h3 v-else>Adventure</h3>\r\n          <div class=\"row main justify-content-center\">\r\n            <div class=\"row main\">\r\n              <div class=\"col-2\"></div>\r\n              <div class=\"col-8\">\r\n\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"name\">Name</label>\r\n                  </div>\r\n                  <input class=\"form-control\" v-model=\"adventure.name\" type=\"text\" id=\"name\" placeholder=\"E.g. Adventure\" @input=\"nameIsEntered=true\">\r\n                  <p v-if='!nameIsEntered'>'Name' is a mandatory field.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"description\">Description</label>\r\n                  </div>\r\n                  <textarea  class=\"form-control\" v-model=\"adventure.description\" rows=\"10\" maxlength=\"500\" placeholder=\"Please describe why you want to join our community in 50-500 characters.\" id=\"description\" @input=\"descriptionIsEntered=true\"></textarea>\r\n                  <p v-if='!descriptionIsEntered'>'Description' is a mandatory field.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"description\">Duration</label>\r\n                  </div>\r\n                  <div class=\"p-0\" style=\"display: flex; max-width: 400px\">\r\n                    <input v-model=\"hours\" class=\"form-control\" type=\"number\" style=\"width: 60px\" min=\"0\" @input=\"durationIsEntered=true\"><div style=\"align-self: flex-end;font-size: 22px\">h</div>\r\n                    <input v-model=\"minutes\" class=\"form-control ms-2\" type=\"number\" style=\"width: 60px\" min=\"0\" max=\"59\" @input=\"durationIsEntered=true\"><div style=\"align-self: flex-end;font-size: 22px\">min</div>\r\n                  </div>\r\n                  <p v-if='!durationIsEntered'>'Duration' is a mandatory field.</p>\r\n                  <p v-if='null'>Please convert minutes to hours.</p>\r\n                </div>\r\n\r\n                <div class=\"row mt-4 justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"country\">Country</label>\r\n                  </div>\r\n                  <input  v-model=\"adventure.address.country\" class=\"form-control\" type=\"text\" id=\"country\" placeholder=\"Country\" @input=\"countryIsEntered=true\">\r\n                  <p v-if='!countryIsEntered'>'Country' is a mandatory field.</p>\r\n                  <p v-if='!addressIsValid'>Invalid address data.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"city\">City</label>\r\n                  </div>\r\n                  <input v-model=\"adventure.address.city\" class=\"form-control\" type=\"text\" id=\"city\" placeholder=\"City\" @input=\"cityIsEntered=true\">\r\n                  <p v-if='!cityIsEntered'>'City' is a mandatory field.</p>\r\n                  <p v-if='!addressIsValid'>Invalid address data.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"street\">Street</label>\r\n                  </div>\r\n                  <input v-model=\"adventure.address.street\" class=\"form-control\" type=\"text\" id=\"street\" placeholder=\"Street\" @input=\"streetIsEntered=true\">\r\n                  <p v-if='!streetIsEntered'>'Street' is a mandatory field.</p>\r\n                  <p v-if='!addressIsValid'>Invalid address data.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"number\">Number</label>\r\n                  </div>\r\n                  <input v-model=\"adventure.address.number\" class=\"form-control\"  type=\"text\" id=\"number\" placeholder=\"House Number\" @input=\"numberIsEntered=true\">\r\n                  <p v-if='!numberIsEntered'>'Number' is a mandatory field.</p>\r\n                  <p v-if='!addressIsValid'>Invalid address data.</p>\r\n                </div>\r\n\r\n                <div class=\"row mt-4 justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"price\">Price</label>\r\n                  </div>\r\n                  <input v-model=\"adventure.price\" type=\"number\" step=\"any\" min=\"0\"  id=\"price\" class=\"form-control\" placeholder=\"Price in $\" @input=\"priceIsEntered=true\">\r\n                  <p v-if='!priceIsEntered'>'Price' is a mandatory field.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"capacity\">Capacity</label>\r\n                  </div>\r\n                  <input v-model=\"adventure.capacity\" type=\"number\" step=\"any\" min=\"0\"  id=\"capacity\" class=\"form-control\" placeholder=\"Max people\" @input=\"capacityIsEntered=true\">\r\n                  <p v-if='!capacityIsEntered'>'Capacity' is a mandatory field.</p>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"cancellation\">Cancellation fee</label>\r\n                  </div>\r\n                  <input v-model=\"adventure.cancellationFee\" type=\"number\" step=\"any\" min=\"0\" max=\"100\"  id=\"cancellation\" class=\"form-control\" placeholder=\"Cancellation fee in %\" @input=\"cancellationFeeIsEntered=true\">\r\n                  <p v-if='!cancellationFeeIsEntered'>'Cancellation fee' is a mandatory field.</p>\r\n                </div>\r\n\r\n                <div class=\"row mt-4 justify-content-center\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"equipment\">Equipment</label>\r\n                  </div>\r\n                  <input class=\"form-control\" v-model=\"equipmentPiece.name\" type=\"text\" id=\"equipment\" placeholder=\"E.g. Fishing rod\" @keyup.enter=\"addEquipment\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <small class=\"form-text text-muted\">\r\n                      Press Enter to add equipment\r\n                    </small>\r\n                  </div>\r\n                  <div class=\"row tag-container\">\r\n                    <p v-if='equipmentAlreadyExists'>Equipment already exists.</p>\r\n                    <div class=\"equipment-tag rounded-pill mt-1 ms-1 p-1\" v-for=\"(pieceOfEquipment, index) in adventure.adventureEquipment\" :key=\"index\">\r\n                      {{pieceOfEquipment.name}}\r\n                      <button class=\"tag-button text-center\" @click=\"removeEquipment(pieceOfEquipment)\"><font-awesome-icon icon=\"x\" style=\"width: 9px; height: 9px\"></font-awesome-icon></button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-4 justify-content-center\">\r\n                  <div class=\"justify-content-center p-0\" style=\"max-width: 400px;\">\r\n                    <div class=\"d-flex d-inline-flex justify-content-between p-0 w-100\">\r\n                      <label for=\"additionalServices\" class=\"ms-3\">Additional Services</label>\r\n                      <div class=\"dropdown\">\r\n                        <button class=\"btn dropdown\" type=\"button\" id=\"servicesDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <font-awesome-icon icon=\"plus\"></font-awesome-icon>\r\n                        </button>\r\n                        <form class=\"dropdown-menu dropdown-menu-end form p-4 m-0\" aria-labelledby=\"servicesDropdown\">\r\n                          <h4>New Service</h4>\r\n                          <label for=\"service\" class=\"ms-2\">Name</label>\r\n                          <input v-model=\"additionalService\" class=\"form-control m-0\" type=\"text\" placeholder=\"E.g. Spa\" id=\"service\">\r\n                          <label for=\"servicePrice\" class=\"ms-2\">Price</label>\r\n                          <input v-model=\"additionalServicePrice\" type=\"number\" step=\"any\" min=\"0\"  id=\"servicePrice\" class=\"form-control\" placeholder=\"Price in $\">\r\n                          <div class=\"text-center\">\r\n                            <button class=\"btn mt-2\" type=\"button\" @click.prevent=\"addService\">Add</button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row tag-container\" id=\"additionalServices\">\r\n                      <p v-if='serviceAlreadyExists'>Additional service already exists.</p>\r\n                      <div class=\"equipment-tag rounded-pill mt-1 ms-1 p-1\" v-for=\"(additionalService, index) in adventure.additionalServices\" :key=\"index\">\r\n                        {{additionalService.name + \" \" + (additionalService.price===null?\"Free\":additionalService.price + \"$\")}}\r\n                        <button class=\"tag-button text-center\" @click=\"removeService(additionalService)\"><font-awesome-icon icon=\"x\" style=\"width: 9px; height: 9px\"></font-awesome-icon></button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-4 justify-content-center\">\r\n                  <div class=\"justify-content-center p-0\" style=\"max-width: 400px;\">\r\n                    <div class=\"d-flex d-inline-flex justify-content-between p-0 w-100\">\r\n                      <label for=\"rulesTable\" class=\"ms-3\">Rules of Conduct</label>\r\n                      <div class=\"dropdown\">\r\n                        <button class=\"btn dropdown\" type=\"button\" id=\"rulesDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                          <font-awesome-icon icon=\"plus\"></font-awesome-icon>\r\n                        </button>\r\n                        <form class=\"dropdown-menu dropdown-menu-end form p-4 m-0\" aria-labelledby=\"rulesDropdown\">\r\n                          <h4>New Rule</h4>\r\n                          <label for=\"conductRule\" class=\"ms-2\">Rule</label>\r\n                          <input v-model=\"ruleText\" class=\"form-control m-0\" type=\"text\" id=\"conductRule\">\r\n                          <label for=\"ruleType\" class=\"ms-2\">Rule Type</label>\r\n                          <select v-model=\"ruleType\" class=\"form-control m-0\" id=\"ruleType\">\r\n                            <option value=\"Do\">Do</option>\r\n                            <option value=\"DoNot\" selected=\"selected\">Don't</option>\r\n                          </select>\r\n                          <div class=\"text-center\">\r\n                            <button class=\"btn mt-2\" type=\"button\" @click.prevent=\"addRule\">Add</button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\" row justify-content-center p-0\">\r\n                      <p v-if='ruleAlreadyExists'>Rule already exists.</p>\r\n                      <table class=\"mt-1 tag-container\" id=\"rulesTable\" style=\"max-width: 400px\">\r\n                        <thead v-if=\"rulesOfConduct.length > 0\" style=\"background-color: transparent\">\r\n                        <tr>\r\n                          <th style=\"background-color: #008970; color: #f7f7f2; ; border-bottom: #008970 1px solid\">Do</th>\r\n                          <th style=\"background-color: #e23c52; color: #f7f7f2; border-left: #008970 1px solid; border-bottom: #e23c52 1px solid\">Don't</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr v-for=\"(rule, index) in rulesOfConduct\" :key=\"index\" :class=\"index%2!==0?'odd':'even'\">\r\n                          <td style=\"border-right: #008970 1px solid;word-wrap: break-word;\">\r\n                            <div class=\"d-flex d-inline-flex justify-content-between p-0\">\r\n                              <div>{{rule.Do}}</div><button v-if=\"rule.Do\" class=\"button\" style=\"border: none; background-color: transparent; color: #e23c52\" @click=\"removeRule(rule.Do)\"><font-awesome-icon icon=\"minus\"></font-awesome-icon></button>\r\n                            </div>\r\n                          </td>\r\n                          <td style=\"word-wrap: break-word;\">\r\n                            <div class=\"d-flex d-inline-flex justify-content-between p-0\">\r\n                              <div>{{rule.DoNot}}</div>\r\n                              <button v-if=\"rule.DoNot\" class=\"button\" style=\"border: none; background-color: transparent; color: #e23c52\" @click=\"removeRule(rule.DoNot)\"><font-awesome-icon icon=\"minus\"></font-awesome-icon></button>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center mt-4\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <label for=\"imageInput\">Images</label>\r\n                    <p v-if='!photoIsEntered'>One image is mandatory.</p>\r\n                  </div>\r\n                  <div class=\"row p-0 justify-content-center\" id=\"imageInput\" style=\"max-width: 400px;min-width: 120px\">\r\n                    <label class=\"imageUploadLabel text-center rounded m-1\" style=\"background-color:white;display: table;width: 180px;height: 100px;border: 1px solid #008970;cursor: pointer\">\r\n                      <span style=\"display:table-cell; vertical-align: middle\">\r\n                        <font-awesome-icon class=\"rounded-circle\" icon=\"plus-circle\" style=\"color: #008970; background-color: transparent;height: 50px\"></font-awesome-icon>\r\n                        <input class=\"upload-button\" multiple type=\"file\" accept=\"image/jpeg\" ref=\"photo\" @change=\"addPhoto\">\r\n                      </span>\r\n                    </label>\r\n                    <div v-for=\"(url, index) in imageUrls\" class=\"m-1 rounded\" :key=\"index\" style=\"width:180px;height:100px;border: 1px solid #008970;background-color: lightgray;position: relative;text-align: center\">\r\n                      <img :src=\"url\" alt=\"\" style=\"width:100%; height:100%; object-fit: contain;\">\r\n                      <button style=\"background-color: transparent;color: #e23c52;border:none;position: absolute;top: 0;right: 0;cursor: pointer\" @click=\"removePhoto(index)\"><font-awesome-icon icon=\"x\"></font-awesome-icon></button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center mt-4\">\r\n                  <label class=\"ms-3\">Availability Period</label>\r\n                  <div class=\"container p-0 m-0 text-center\" style=\"max-width: 400px\">\r\n                      <date-picker v-model=\"range\" mode=\"dateTime\" is-range is24hr :firstDayOfWeek=2>\r\n                      </date-picker>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"col-2\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex pt-3 justify-content-center\">\r\n            <router-link to=\"/fishingInstructor/adventures\" class=\"btn btn-red mt-3 me-1\">Cancel</router-link>\r\n            <button type=\"button\" class=\"btn mt-3\" @click=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faMinus, faPlus, faPlusCircle, faX, faArrowRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {DatePicker} from \"v-calendar\"\r\nimport axios from \"axios\";\r\nimport {toggleLoading, toggleProcessing} from \"@/components/state\";\r\nimport store from \"@/store\";\r\n\r\nlibrary.add(faPlus, faMinus, faX, faPlusCircle, faArrowRight);\r\n\r\nexport default {\r\n  name: \"AdventureCreationPage\",\r\n  components: {FontAwesomeIcon, DatePicker},\r\n  data() {\r\n    return {\r\n      adventure: {\r\n        id: null,\r\n        name: null,\r\n        description: null,\r\n        capacity: null,\r\n        price: null,\r\n        duration: 0,\r\n        additionalServices: [],\r\n        conductRules: [],\r\n        cancellationFee: null,\r\n        address: {\r\n          country: null,\r\n          city: null,\r\n          street: null,\r\n          number: null,\r\n          longitude: null,\r\n          latitude: null\r\n        },\r\n        adventureEquipment: [],\r\n        initDate: null,\r\n        termDate: null,\r\n      },\r\n      photo: null,\r\n      range:{\r\n        start: null,\r\n        end: null\r\n      },\r\n      primaryPhotos: [],\r\n      date: null,\r\n      photos: [],\r\n      imageUrls: [],\r\n      equipmentPiece: {name:\"\"},\r\n      additionalService: \"\",\r\n      additionalServicePrice: null,\r\n      ruleType: \"Do\",\r\n      ruleText: \"\",\r\n      hours: 0,\r\n      minutes: 0,\r\n      ruleIsValid: true,\r\n      ruleAlreadyExists: false,\r\n      serviceAlreadyExists: false,\r\n      equipmentAlreadyExists: false,\r\n      nameIsEntered: true,\r\n      durationIsEntered: true,\r\n      descriptionIsEntered: true,\r\n      countryIsEntered: true,\r\n      cityIsEntered: true,\r\n      streetIsEntered: true,\r\n      numberIsEntered: true,\r\n      priceIsEntered: true,\r\n      capacityIsEntered: true,\r\n      cancellationFeeIsEntered: true,\r\n      photoIsEntered: true,\r\n      addressIsValid: true\r\n    }\r\n  },\r\n  mounted() {\r\n    toggleLoading();\r\n    if (this.$route.params.id !== undefined) {\r\n      axios.get(\"/RentalObjects/getAdventureInstructor\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + store.getters.access_token,\r\n        },\r\n        params: {\r\n          id: this.$route.params.id\r\n        }\r\n      })\r\n      .then((response) => {\r\n        let adventure = response.data;\r\n        this.adventure.name = adventure.name;\r\n        this.adventure.description = adventure.description;\r\n        this.hours = Math.trunc(adventure.duration);\r\n        this.minutes = 60*(adventure.duration%1);\r\n        this.adventure.address = adventure.address;\r\n        this.adventure.price = adventure.price;\r\n        this.adventure.capacity = adventure.capacity;\r\n        this.adventure.adventureEquipment = adventure.adventureEquipment;\r\n        this.adventure.additionalServices = adventure.additionalServices;\r\n        this.adventure.conductRules = adventure.conductRules;\r\n        this.adventure.cancellationFee = adventure.cancellationFee;\r\n        if (adventure.initDate != null && adventure.termDate != null) {\r\n          this.adventure.initDate = new Date(adventure.initDate);\r\n          this.adventure.termDate = new Date(adventure.termDate);\r\n          this.range.start = this.adventure.initDate;\r\n          this.range.end = this.adventure.termDate;\r\n        }\r\n        adventure.photos.forEach(photo => {\r\n          this.photos.push(photo.photo);\r\n          this.primaryPhotos.push(photo.photo);\r\n          this.loadImage(photo.photo, this.photos.indexOf(photo.photo));\r\n        });\r\n        this.adventure.id = adventure.id;\r\n        toggleLoading();\r\n      })\r\n      .catch(() => {\r\n        this.$notify({\r\n          title: \"Server error\",\r\n          text: \"Server is currently off. Please try again later...\",\r\n          type: \"error\"\r\n        });\r\n        toggleLoading();\r\n      })\r\n    }\r\n    else {\r\n      toggleLoading();\r\n    }\r\n  },\r\n  computed: {\r\n    rulesOfConduct() {\r\n      let pairsOfRules = [];\r\n      let positiveRules = this.positiveRules(this.adventure.conductRules);\r\n      let negativeRules = this.negativeRules(this.adventure.conductRules);\r\n      let size = Math.max(positiveRules.length, negativeRules.length);\r\n      for (let i = 0; i < size; i++) {\r\n        pairsOfRules.push({\r\n          \"Do\": i + 1 <= positiveRules.length ? positiveRules[i] : \"\",\r\n          \"DoNot\": i + 1 <= negativeRules.length ? negativeRules[i] : \"\"\r\n        });\r\n      }\r\n      return pairsOfRules;\r\n    },\r\n    isNameEntered() {\r\n      return Boolean(this.adventure.name);\r\n    },\r\n    isDescriptionEntered() {\r\n      return Boolean(this.adventure.description);\r\n    },\r\n    isDurationEntered() {\r\n      return this.adventure.duration > 0;\r\n    },\r\n    isCountryEntered() {\r\n      return Boolean(this.adventure.address.country);\r\n    },\r\n    isCityEntered() {\r\n      return Boolean(this.adventure.address.city);\r\n    },\r\n    isStreetEntered() {\r\n      return Boolean(this.adventure.address.street);\r\n    },\r\n    isNumberEntered() {\r\n      return Boolean(this.adventure.address.number);\r\n    },\r\n    isPriceEntered() {\r\n      return Boolean(this.adventure.price);\r\n    },\r\n    isCapacityEntered() {\r\n      return Boolean(this.adventure.capacity);\r\n    },\r\n    isCancellationFeeEntered() {\r\n      return Boolean(this.adventure.cancellationFee);\r\n    },\r\n    isPhotoEntered() {\r\n      return this.photos.length > 0;\r\n    }\r\n  },\r\n  methods: {\r\n    submit() {\r\n      this.adventure.duration = this.minutes/60 + this.hours;\r\n      if (this.isDataEntered()) {\r\n        this.isDataCorrect();\r\n      }\r\n    },\r\n    createAdventure() {\r\n      let adventure = this.adventure;\r\n      this.range.start.setTime(this.range.start.getTime() + 2*60*60*1000);\r\n      this.range.end.setTime(this.range.end.getTime() + 2*60*60*1000);\r\n      adventure.initDate = this.range.start;\r\n      adventure.termDate = this.range.end;\r\n      axios.post(\"/RentalObjects/addAdventure\", adventure, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        }\r\n      })\r\n      .then((adventure) => {\r\n        for (let i = 0; i < this.photos.length; i++) {\r\n          let formData = new FormData();\r\n          formData.append(\"file\", this.photos[i]);\r\n          axios.post(\"/Photos/upload\", formData, {\r\n            headers: {\r\n              Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n              \"Content-type\": \"multipart/form-data\"\r\n            },\r\n          })\r\n          .then((response) => {\r\n            let body = {id: adventure.data.id, photos: [response.data]}\r\n            axios.post(\"/RentalObjects/connectPhotosToRental\", body,{\r\n              headers: {\r\n                Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n              },\r\n            }).then(() =>{\r\n              this.$notify( {\r\n                title: \"Successful adding\",\r\n                text: \"You have successfully added a new adventure.\",\r\n                position: \"bottom right\",\r\n                type: \"success\"\r\n              });\r\n            })\r\n          })\r\n        }\r\n        toggleProcessing();\r\n      })\r\n      .catch(error => {\r\n        if (!error.response) {\r\n          this.$notify({\r\n            title: \"Server error\",\r\n            text: \"Server is currently off. Please try again later...\",\r\n            type: \"error\"\r\n          });\r\n        } else if (error.response.status === 500) {\r\n          this.$notify({\r\n            title: \"Internal Server Error\",\r\n            text: \"Something went wrong on the server! Please try again later...\",\r\n            position: \"bottom right\",\r\n            type: \"error\"\r\n          })\r\n        }\r\n        toggleProcessing();\r\n      })\r\n    },\r\n    updateAdventure() {\r\n      let adventure = this.adventure;\r\n      this.range.start.setTime(this.range.start.getTime() + 2*60*60*1000);\r\n      this.range.end.setTime(this.range.end.getTime() + 2*60*60*1000);\r\n      adventure.initDate = this.range.start;\r\n      adventure.termDate = this.range.end;\r\n      axios.put(\"/RentalObjects/updateAdventure\", adventure, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        }\r\n      })\r\n      .then((id) => {\r\n        for (let i = 0; i < this.photos.length; i++) {\r\n          if (!this.photoExisted(this.photos[i])) {\r\n            let formData = new FormData();\r\n            formData.append(\"file\", this.photos[i]);\r\n            axios.post(\"/Photos/upload\", formData, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n                \"Content-type\": \"multipart/form-data\"\r\n              },\r\n            })\r\n            .then((response) => {\r\n              let body = {id: id.data, photos: [response.data]}\r\n              axios.post(\"/RentalObjects/connectPhotosToRental\", body,{\r\n                headers: {\r\n                  Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n                },\r\n              }).then(() =>{\r\n                this.$notify( {\r\n                  title: \"Successful update\",\r\n                  text: \"You have successfully updated the adventure.\",\r\n                  position: \"bottom right\",\r\n                  type: \"success\"\r\n                });\r\n              })\r\n            })\r\n          }\r\n        }\r\n        toggleProcessing();\r\n      })\r\n      .catch(error => {\r\n        if (!error.response) {\r\n          this.$notify({\r\n            title: \"Server error\",\r\n            text: \"Server is currently off. Please try again later...\",\r\n            type: \"error\"\r\n          });\r\n        } else if (error.response.status === 500) {\r\n          this.$notify({\r\n            title: \"Internal Server Error\",\r\n            text: \"Something went wrong on the server! Please try again later...\",\r\n            position: \"bottom right\",\r\n            type: \"error\"\r\n          })\r\n        }\r\n        toggleProcessing();\r\n      })\r\n    },\r\n    isDataEntered() {\r\n      if (!this.isNameEntered) {\r\n        this.nameIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isDescriptionEntered) {\r\n        this.descriptionIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isDurationEntered) {\r\n        this.durationIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isCountryEntered) {\r\n        this.countryIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isCityEntered) {\r\n        this.cityIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isStreetEntered) {\r\n        this.streetIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isNumberEntered) {\r\n        this.numberIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isPriceEntered) {\r\n        this.priceIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isCapacityEntered) {\r\n        this.capacityIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isCancellationFeeEntered) {\r\n        this.cancellationFeeIsEntered = false;\r\n        return false;\r\n      }\r\n      if (!this.isPhotoEntered) {\r\n        this.photoIsEntered = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    async isDataCorrect() {\r\n      this.addressIsValid = false;\r\n      this.validateAddress();\r\n    },\r\n    loadImage(name, index) {\r\n      axios.get(\"/Photos/\", {headers: {\r\n          Authorization: \"Bearer \" + this.$store.getters.access_token,\r\n        },\r\n        params: {\r\n          path: name,\r\n        },\r\n        responseType: \"blob\"\r\n      })\r\n          .then(response => {\r\n            this.imageUrls[index] = URL.createObjectURL(response.data);\r\n          })\r\n          .catch((error) =>{\r\n            console.log(error);\r\n          });\r\n    },\r\n    validateAddress() {\r\n      toggleProcessing();\r\n      const apiKey = 'VrDrl5BjEA0Whvb-chHbFz96HV4qlCXB-yoiTRRLKno';\r\n      const url = 'https://geocoder.ls.hereapi.com/6.2/geocode.json' +\r\n          '?apiKey=' + apiKey +\r\n          '&housenumber=' + this.adventure.address.number +\r\n          '&street=' + this.adventure.address.street +\r\n          '&city=' + this.adventure.address.city +\r\n          '&country=' + this.adventure.address.country;\r\n      fetch(url)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            const responseView = data.Response.View;\r\n            if (responseView.length === 0) {\r\n              this.addressIsValid = false;\r\n            }\r\n            else {\r\n              const location = responseView[0].Result[0].Location.DisplayPosition;\r\n              const address = responseView[0].Result[0].Location.Address;\r\n              this.adventure.address.city = this.transliterate(address.City);\r\n              this.adventure.address.country = this.transliterate(address.AdditionalData[0].value);\r\n              this.adventure.address.street = this.transliterate(address.Street);\r\n              this.adventure.address.longitude = location.Longitude;\r\n              this.adventure.address.latitude = location.Latitude;\r\n              this.addressIsValid = true;\r\n              if (this.adventure.id === null) {\r\n                this.createAdventure();\r\n              }\r\n              else {\r\n                this.updateAdventure();\r\n              }\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.addressIsValid = false;\r\n            toggleProcessing();\r\n          });\r\n    },\r\n    transliterate(word) {\r\n      let letters = {\"Б\":\"B\", \"В\":\"V\", \"Г\":\"G\", \"Д\":\"D\", \"Ђ\":\"Đ\", \"Ж\":\"Ž\", \"З\":\"Z\", \"И\":\"I\", \"К\":\"K\", \"Л\":\"L\", \"Љ\":\"Lj\", \"М\":\"M\", \"Н\":\"N\", \"Њ\":\"Nj\", \"П\":\"P\",\r\n        \"Р\":\"R\", \"С\":\"S\", \"Ћ\":\"Ć\", \"У\":\"U\", \"Ф\":\"F\", \"Х\":\"H\", \"Ц\":\"C\", \"Ч\":\"Č\", \"Џ\":\"Dž\", \"Ш\":\"Š\", \"б\":\"b\", \"в\":\"v\", \"г\":\"g\", \"д\":\"d\", \"ђ\":\"đ\", \"ж\":\"ž\", \"з\":\"z\", \"и\":\"i\", \"к\":\"k\", \"л\":\"l\", \"љ\":\"lj\", \"м\":\"m\", \"н\":\"n\", \"њ\":\"nj\", \"п\":\"p\",\r\n        \"р\":\"r\", \"с\":\"s\", \"т\":\"t\", \"ћ\":\"ć\", \"у\":\"u\", \"ф\":\"f\", \"х\":\"h\", \"ц\":\"c\", \"ч\":\"č\", \"џ\":\"dž\", \"ш\":\"š\"};\r\n      return word.split('').map(function (char) {\r\n        return letters[char] || char;\r\n      }).join(\"\");\r\n    },\r\n    addPhoto(e) {\r\n      e.target.files.forEach(photo => {\r\n        this.photos.push(photo);\r\n        this.imageUrls.push(URL.createObjectURL(photo));\r\n        this.photoIsEntered = true;\r\n      })\r\n    },\r\n    removePhoto(index) {\r\n      this.photos.splice(index, 1);\r\n      this.imageUrls.splice(index, 1);\r\n    },\r\n    addEquipment() {\r\n      if (this.equipmentPiece.name.trim() !== \"\") {\r\n        if (this.adventure.adventureEquipment.indexOf(this.equipmentPiece.name.trim()) === -1) {\r\n          this.adventure.adventureEquipment.push(this.equipmentPiece);\r\n          this.equipmentPiece = {name: \"\"};\r\n          this.equipmentAlreadyExists=false;\r\n        }\r\n        else {\r\n          this.equipmentAlreadyExists=true;\r\n        }\r\n      }\r\n    },\r\n    removeEquipment(equipmentName) {\r\n      this.adventure.adventureEquipment.splice(this.adventure.adventureEquipment.indexOf(equipmentName), 1);\r\n    },\r\n    addService() {\r\n      if (this.additionalService.trim() !== \"\") {\r\n        let newService = {};\r\n        newService[\"name\"] = this.additionalService.trim();\r\n        newService[\"price\"] = this.additionalServicePrice===null?0:this.additionalServicePrice;\r\n        if (this.adventure.additionalServices.indexOf(newService) === -1) {\r\n          this.adventure.additionalServices.push(newService);\r\n          this.additionalService = \"\";\r\n          this.additionalServicePrice = null;\r\n          this.serviceAlreadyExists = false;\r\n        } else {\r\n          this.serviceAlreadyExists = true;\r\n        }\r\n      }\r\n    },\r\n    removeService(service) {\r\n      this.adventure.additionalServices.splice(this.adventure.additionalServices.indexOf(service), 1);\r\n    },\r\n    addRule() {\r\n      if (this.ruleText.trim() !== \"\" && this.ruleType.trim() !== \"\") {\r\n        if (!this.ruleExists(this.ruleText.trim())) {\r\n          let newRule = {};\r\n          newRule[\"type\"] = this.ruleType;\r\n          newRule[\"rule\"] = this.ruleText;\r\n          this.adventure.conductRules.push(newRule);\r\n          this.ruleType = \"\";\r\n          this.ruleText = \"\";\r\n          this.ruleIsValid = true;\r\n          this.ruleAlreadyExists = false;\r\n        } else {\r\n          this.ruleAlreadyExists = true;\r\n        }\r\n      } else {\r\n        this.ruleIsValid = false;\r\n      }\r\n    },\r\n    removeRule(rule) {\r\n      this.adventure.conductRules.splice(this.getRuleIndex(rule), 1);\r\n    },\r\n    getRuleIndex(rule) {\r\n      let index = -1;\r\n      this.adventure.conductRules.forEach(conductRule => {\r\n        if (conductRule.rule === rule) {\r\n          index = this.adventure.conductRules.indexOf(conductRule);\r\n        }\r\n      })\r\n      return index;\r\n    },\r\n    positiveRules(rulesOfConduct) {\r\n      let positiveRules = [];\r\n      rulesOfConduct.forEach(rule => {\r\n        if (rule.type === \"Do\") {\r\n          positiveRules.push(rule.rule);\r\n        }\r\n      });\r\n      return positiveRules;\r\n    },\r\n    negativeRules(rulesOfConduct) {\r\n      let negativeRules = [];\r\n      rulesOfConduct.forEach(rule => {\r\n        if (rule.type === \"DoNot\") {\r\n          negativeRules.push(rule.rule);\r\n        }\r\n      });\r\n      return negativeRules;\r\n    },\r\n    ruleExists(rule) {\r\n      return this.getRuleIndex(rule) !== -1;\r\n    },\r\n    photoExisted(photo) {\r\n      for (let i = 0; i <this.primaryPhotos.length; i++) {\r\n        if (this.primaryPhotos[i] === photo) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .upload-button {\r\n    display: none;\r\n  }\r\n\r\n  label, .tag-container, small {\r\n    max-width: 400px;\r\n  }\r\n\r\n  .equipment-tag {\r\n    background-color: #008970;\r\n    font-weight: bold;\r\n    color: white;\r\n    border: 2px solid #008970;\r\n    width: fit-content;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .equipment-tag:hover   {\r\n    background-color: white;\r\n    color: #008970;\r\n    border: 2px solid #008970;\r\n    width: fit-content;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .equipment-tag:hover .tag-button {\r\n    background-color: transparent;\r\n    color: #008970;\r\n    border: none;\r\n  }\r\n\r\n  .tag-button {\r\n    background-color: transparent;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  textarea {\r\n    resize: none;\r\n    width: 100%;\r\n    text-align: justify;\r\n    max-width: 400px;\r\n  }\r\n\r\n  input {\r\n    max-width: 400px;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: grey;\r\n  }\r\n\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n\r\n  h4 {\r\n    text-align: center;\r\n  }\r\n\r\n  p {\r\n    color: #e23c52;\r\n  }\r\n\r\n  .input-group-text {\r\n    background-color: transparent;\r\n    border-right: none;\r\n    color: #008970;\r\n    display: table;\r\n  }\r\n\r\n  .input-group-text font-awesome-icon {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .input-group {\r\n    max-width: 400px;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}