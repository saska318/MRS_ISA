{"ast":null,"code":"import { createStore } from \"vuex\";\n\nconst getDefaultState = () => {\n  return {\n    user: null,\n    email: null,\n    access_token: null,\n    first_login: null,\n    rentalId: null,\n    rentalType: null,\n    isSuperAdmin: null\n  };\n};\n\nconst state = getDefaultState();\nconst store = createStore({\n  state,\n  getters: {\n    user: state => {\n      return state.user;\n    },\n    email: state => {\n      return state.email;\n    },\n    access_token: state => {\n      return state.access_token;\n    },\n    first_login: state => {\n      return state.first_login;\n    },\n    rentalId: state => {\n      return state.rentalId;\n    },\n    rentalType: state => {\n      return state.rentalType;\n    },\n    grade: state => {\n      return state.grade;\n    },\n    isSuperAdmin: state => {\n      return state.isSuperAdmin;\n    },\n    isAuthenticated: state => {\n      return state.email != null;\n    }\n  },\n  actions: {\n    user(context, user) {\n      context.commit(\"user\", user);\n    },\n\n    email(context, email) {\n      context.commit(\"email\", email);\n    },\n\n    access_token(context, access_token) {\n      context.commit(\"access_token\", access_token);\n    },\n\n    first_login(context, first_login) {\n      context.commit(\"first_login\", first_login);\n    },\n\n    rentalId(context, rentalId) {\n      context.commit(\"rentalId\", rentalId);\n    },\n\n    rentalType(context, rentalType) {\n      context.commit(\"rentalType\", rentalType);\n    },\n\n    grade(context, grade) {\n      context.commit(\"grade\", grade);\n    },\n\n    isSuperAdmin(context, isSuperAdmin) {\n      context.commit(\"isSuperAdmin\", isSuperAdmin);\n    },\n\n    reset_state(context) {\n      context.commit(\"reset_state\");\n    }\n\n  },\n  mutations: {\n    user(state, user) {\n      state.user = user;\n    },\n\n    email(state, email) {\n      state.email = email;\n    },\n\n    access_token(state, access_token) {\n      state.access_token = access_token;\n    },\n\n    first_login(state, first_login) {\n      state.first_login = first_login;\n    },\n\n    rentalId(state, rentalId) {\n      state.rentalId = rentalId;\n    },\n\n    rentalType(state, rentalType) {\n      state.rentalType = rentalType;\n    },\n\n    grade(state, grade) {\n      state.grade = grade;\n    },\n\n    isSuperAdmin(state, isSuperAdmin) {\n      state.isSuperAdmin = isSuperAdmin;\n    },\n\n    reset_state(state) {\n      Object.assign(state, getDefaultState());\n    }\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/SaÅ¡ka/Downloads/ISA_MRS/isa_mrs_projekat_front/src/store/index.js"],"names":["createStore","getDefaultState","user","email","access_token","first_login","rentalId","rentalType","isSuperAdmin","state","store","getters","grade","isAuthenticated","actions","context","commit","reset_state","mutations","Object","assign"],"mappings":"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","sourcesContent":["import {createStore} from \"vuex\";\r\n\r\nconst getDefaultState = () => {\r\n  return {\r\n      user: null,\r\n      email: null,\r\n      access_token: null,\r\n      first_login: null,\r\n      rentalId: null,\r\n      rentalType: null,\r\n      isSuperAdmin: null,\r\n  }\r\n};\r\n\r\nconst state = getDefaultState();\r\n\r\nconst store = createStore({\r\n    state,\r\n    getters: {\r\n        user: (state) => {\r\n            return state.user;\r\n        },\r\n        email: (state) => {\r\n            return state.email;\r\n        },\r\n        access_token: (state) => {\r\n            return state.access_token;\r\n        },\r\n        first_login: (state) => {\r\n            return state.first_login;\r\n        },\r\n        rentalId: (state) => {\r\n            return state.rentalId;\r\n        },\r\n        rentalType: (state) => {\r\n            return state.rentalType;\r\n        },\r\n        grade: (state) => {\r\n            return state.grade;\r\n        },\r\n        isSuperAdmin: (state) => {\r\n            return state.isSuperAdmin;\r\n        },\r\n        isAuthenticated: (state) => {\r\n            return state.email != null;\r\n        }\r\n    },\r\n    actions: {\r\n        user(context, user) {\r\n            context.commit(\"user\", user);\r\n        },\r\n        email(context, email) {\r\n            context.commit(\"email\", email);\r\n        },\r\n        access_token(context, access_token) {\r\n            context.commit(\"access_token\", access_token);\r\n        },\r\n        first_login(context, first_login) {\r\n            context.commit(\"first_login\", first_login);\r\n        },\r\n        rentalId(context, rentalId) {\r\n            context.commit(\"rentalId\", rentalId);\r\n        },\r\n        rentalType(context, rentalType) {\r\n            context.commit(\"rentalType\", rentalType);\r\n        },\r\n        grade(context, grade) {\r\n            context.commit(\"grade\", grade);\r\n        },\r\n        isSuperAdmin(context, isSuperAdmin) {\r\n            context.commit(\"isSuperAdmin\", isSuperAdmin);\r\n        },\r\n        reset_state(context) {\r\n            context.commit(\"reset_state\")\r\n        }\r\n    },\r\n    mutations: {\r\n        user(state, user) {\r\n            state.user = user;\r\n        },\r\n        email(state, email) {\r\n            state.email = email;\r\n        },\r\n        access_token(state, access_token) {\r\n            state.access_token = access_token;\r\n        },\r\n        first_login(state, first_login) {\r\n            state.first_login = first_login;\r\n        },\r\n        rentalId(state, rentalId) {\r\n            state.rentalId = rentalId;\r\n        },\r\n        rentalType(state, rentalType) {\r\n            state.rentalType = rentalType;\r\n        },\r\n        grade(state, grade) {\r\n            state.grade = grade;\r\n        },\r\n        isSuperAdmin(state, isSuperAdmin) {\r\n            state.isSuperAdmin = isSuperAdmin;\r\n        },\r\n        reset_state(state) {\r\n            Object.assign(state, getDefaultState());\r\n        }\r\n    }\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}