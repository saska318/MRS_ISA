{"ast":null,"code":"import { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCheck, faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nlibrary.add(faCheck, faExclamationTriangle);\nexport default {\n  name: \"VerificationPage\",\n  components: {\n    FontAwesomeIcon\n  },\n\n  data() {\n    return {\n      isSuccessful: null\n    };\n  },\n\n  mounted() {\n    axios.put(\"/Users/activate\", null, {\n      headers: {\n        Authorization: \"Bearer \" + this.$router.currentRoute.value.params.token\n      }\n    }).then(() => {\n      this.isSuccessful = true;\n    }).catch(error => {\n      if (!error.response || error.response.status === 500) {\n        this.$notify({\n          title: \"Server error\",\n          text: \"Server is currently off. Please try again later...\",\n          type: \"error\"\n        });\n        this.$router.push(\"/\");\n      } else if (error.response.status === 404) {\n        this.$notify({\n          title: \"Not Found\",\n          text: \"Email does not exist. Please sign up.\",\n          position: \"bottom right\",\n          type: \"error\"\n        });\n        this.$router.push(\"/registration\");\n      } else if (error.response.status === 401) {\n        this.$notify({\n          title: \"Invalid Request\",\n          text: \"Bad verification request. Token has expired.\",\n          position: \"bottom right\",\n          type: \"error\"\n        });\n        this.isSuccessful = false;\n      } else if (error.response.status === 400) {\n        this.$notify({\n          title: \"Bad Request\",\n          text: \"Bad verification request. Account has already been verified.\",\n          position: \"bottom right\",\n          type: \"error\"\n        });\n        this.$router.push(\"/\");\n      }\n    });\n  },\n\n  methods: {\n    resendEmail() {\n      console.log(this.$router.currentRoute.value.params.refresh);\n      axios.post(\"/Users/resendVerification\", null, {\n        headers: {\n          Authorization: \"Bearer \" + this.$router.currentRoute.value.params.refresh\n        }\n      }).then(() => {\n        this.isSuccessful = true;\n      }).catch(error => {\n        if (!error.response || error.response.status === 500) {\n          this.$notify({\n            title: \"Server error\",\n            text: \"Server is currently off. Please try again later...\",\n            type: \"error\"\n          });\n          this.$router.push(\"/\");\n        } else if (error.response.status === 404) {\n          this.$notify({\n            title: \"Not Found\",\n            text: \"Email does not exist. Please sign up.\",\n            position: \"bottom right\",\n            type: \"error\"\n          });\n          this.$router.push(\"/registration\");\n        } else if (error.response.status === 401) {\n          this.$notify({\n            title: \"Invalid Request\",\n            text: \"Bad verification request. Refresh token has expired. Please contact our administrator for support.\",\n            position: \"bottom right\",\n            type: \"error\"\n          });\n          this.isSuccessful = false;\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["FontAwesomeIcon","library","faCheck","faExclamationTriangle","axios","add","name","components","data","isSuccessful","mounted","put","headers","Authorization","$router","currentRoute","value","params","token","then","catch","error","response","status","$notify","title","text","type","push","position","methods","resendEmail","console","log","refresh","post"],"sourceRoot":"","sources":["C:\\Users\\Sa≈°ka\\Downloads\\ISA_MRS\\isa_mrs_projekat_front\\src\\components\\UnregisteredUser\\components\\VerificationPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-8 pt-5 mb-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div v-if=\"isSuccessful\" class=\"square rounded-2 shadow\" style=\"color: green;\">\r\n          <div class=\"row text-center\">\r\n            <h1>Successful Verification!</h1>\r\n          </div>\r\n          <div class=\"row text-center\">\r\n            <div class=\"container text-center\">\r\n              <font-awesome-icon icon=\"check\" style=\"height: 20vh; width: 20vh\"></font-awesome-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"row text-center\">\r\n            <h6>Your account is activated. You may login now!</h6>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"!isSuccessful && isSuccessful!==null\" class=\"square rounded-2 shadow\" style=\"color: red;\">\r\n          <div class=\"row text-center\">\r\n            <h1>Failed Verification!</h1>\r\n          </div>\r\n          <div class=\"row text-center\">\r\n            <div class=\"container text-center\">\r\n              <font-awesome-icon icon=\"exclamation-triangle\" style=\"height: 20vh; width: 20vh\"></font-awesome-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"row text-center\">\r\n            <h6>Your verification token has expired. To resend the token to your email address press the button:</h6>\r\n          </div>\r\n          <div class=\"d-flex row justify-content-center\">\r\n            <button type=\"button\" class=\"btn btn-default\" @click=\"resendEmail\">Resend</button>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"isSuccessful === null\">\r\n          Loading...\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faCheck, faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\n\r\nlibrary.add(faCheck, faExclamationTriangle)\r\n\r\nexport default {\r\n  name: \"VerificationPage\",\r\n  components: {FontAwesomeIcon},\r\n  data() {\r\n    return {\r\n      isSuccessful: null\r\n    }\r\n  },\r\n  mounted() {\r\n    axios.put(\"/Users/activate\", null,{\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.$router.currentRoute.value.params.token,\r\n      }\r\n    })\r\n    .then(() => {\r\n      this.isSuccessful = true;\r\n    })\r\n    .catch(error => {\r\n          if (!error.response || error.response.status === 500) {\r\n            this.$notify({\r\n              title: \"Server error\",\r\n              text: \"Server is currently off. Please try again later...\",\r\n              type: \"error\"\r\n            });\r\n            this.$router.push(\"/\")\r\n          } else if (error.response.status === 404) {\r\n            this.$notify({\r\n              title: \"Not Found\",\r\n              text: \"Email does not exist. Please sign up.\",\r\n              position: \"bottom right\",\r\n              type: \"error\"\r\n            })\r\n            this.$router.push(\"/registration\")\r\n          } else if (error.response.status === 401) {\r\n            this.$notify({\r\n              title: \"Invalid Request\",\r\n              text: \"Bad verification request. Token has expired.\",\r\n              position: \"bottom right\",\r\n              type: \"error\"\r\n            })\r\n            this.isSuccessful = false;\r\n          } else if (error.response.status === 400) {\r\n            this.$notify({\r\n              title: \"Bad Request\",\r\n              text: \"Bad verification request. Account has already been verified.\",\r\n              position: \"bottom right\",\r\n              type: \"error\"\r\n            })\r\n            this.$router.push(\"/\")\r\n          }\r\n    })\r\n  },\r\n  methods: {\r\n    resendEmail() {\r\n      console.log(this.$router.currentRoute.value.params.refresh)\r\n      axios.post(\"/Users/resendVerification\", null,{\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.$router.currentRoute.value.params.refresh,\r\n        }\r\n      })\r\n          .then(() => {\r\n            this.isSuccessful = true;\r\n          })\r\n          .catch(error => {\r\n            if (!error.response || error.response.status === 500) {\r\n              this.$notify({\r\n                title: \"Server error\",\r\n                text: \"Server is currently off. Please try again later...\",\r\n                type: \"error\"\r\n              });\r\n              this.$router.push(\"/\")\r\n            } else if (error.response.status === 404) {\r\n              this.$notify({\r\n                title: \"Not Found\",\r\n                text: \"Email does not exist. Please sign up.\",\r\n                position: \"bottom right\",\r\n                type: \"error\"\r\n              })\r\n              this.$router.push(\"/registration\")\r\n            } else if (error.response.status === 401) {\r\n              this.$notify({\r\n                title: \"Invalid Request\",\r\n                text: \"Bad verification request. Refresh token has expired. Please contact our administrator for support.\",\r\n                position: \"bottom right\",\r\n                type: \"error\"\r\n              })\r\n              this.isSuccessful = false;\r\n            }\r\n          })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}